{
    "pipes": [],
    "interfaces": [
        {
            "name": "AssetItem",
            "id": "interface-AssetItem-f2a4b0269defef2f8cbb608f509b9b5f658ae2f2c5d8539df9c17274297b134f7a881c031787c102d2ce5e53520a8e4959802f2175452cc13b0f35c47cfa5ec9",
            "file": "src/app/shared/models/asset-item.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AssetItem {\n  title: string;\n  subtitle: string;\n  riskLevel: 'Critical' | 'High' | 'Medium' | 'Low';\n}\n",
            "properties": [
                {
                    "name": "riskLevel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"Critical\" | \"High\" | \"Medium\" | \"Low\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "AssetItem",
            "id": "interface-AssetItem-c44ed9021ddb158b96b4c7b5543cb19cbeb85a8bfb05835f3db823fe87fa2e4a056424b8b026fbf4f1fee80ed9359b4c1c32a13c2a2a36fb94240f72497c5062-1",
            "file": "src/app/features/dashboard/components/context-risk-card/context-risk-card.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport type RiskLevel = 'Critical' | 'High' | 'Medium' | 'Low';\n\nexport interface AssetItem {\n  title: string;\n  subtitle: string;\n  riskLevel: RiskLevel;\n}\n\n@Component({\n  selector: 'app-context-risk-card',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './context-risk-card.component.html',\n})\nexport class ContextRiskCardComponent {\n  @Input() assetItems: AssetItem[] = [];\n  @Input() currentPageStart: number = 0;\n  @Input() currentPageEnd: number = 0;\n  @Input() totalItems: number = 0;\n  @Output() previousPageClicked = new EventEmitter<void>();\n  @Output() nextPageClicked = new EventEmitter<void>();\n\n  // This object DEFINES the background and text colors\n  riskLevelClasses = {\n    Critical: 'bg-[#FFE2E0] text-[#C6190D]', // <-- The background color is defined here\n    High: 'bg-orange-100 text-orange-800',\n    Medium: 'bg-yellow-100 text-yellow-800',\n    Low: 'bg-blue-100 text-blue-800',\n  };\n\n  getRiskClass(riskLevel: RiskLevel): string {\n    return this.riskLevelClasses[riskLevel] || this.riskLevelClasses['Medium'];\n  }\n}\n",
            "properties": [
                {
                    "name": "riskLevel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RiskLevel",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AssetItem-1"
        },
        {
            "name": "ContentBlock",
            "id": "interface-ContentBlock-c3191fcb64bc81b94e1f557c2ec4e8d9b9ad0047fad85225ea1960d8be04ed32c379df02b1116887c7386682ef537dd83cadb7c85d8113f0ad0e01fdfb2f6c07",
            "file": "src/app/features/dashboard/components/framethree-card/framethree-card.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Define the types for items that can appear in a line\nexport type LineItemType = 'text' | 'yellow-tag' | 'green-tag' | 'purple-tag' | 'blue-tag';\n\nexport interface LineItem {\n  type: LineItemType;\n  value: string;\n  // Optional secondary value for tags like \"Lorem\" \"Ipsum\"\n  secondaryValue?: string;\n}\n\n// Define the structure for a single content block\nexport interface ContentBlock {\n  infoLineItems: LineItem[];\n  dataLineItems: LineItem[];\n}\n\n@Component({\n  selector: 'app-framethree-card',\n  imports: [CommonModule],\n  templateUrl: './framethree-card.component.html',\n  styleUrl: './framethree-card.component.scss',\n})\nexport class FramethreeCardComponent {\n  /**\n   * The main title next to the server icon.\n   */\n  @Input() title: string = 'Loremipsum';\n\n  /**\n   * An array of content blocks to be rendered.\n   * Each block contains an info line and a data line.\n   */\n  @Input() contentBlocks: ContentBlock[] = [\n    // Default data to match the first block in the image\n    {\n      infoLineItems: [\n        { type: 'yellow-tag', value: 'Lorem', secondaryValue: '\"Ipsum\"' },\n        { type: 'green-tag', value: 'Lorem' },\n        { type: 'text', value: 'Loremipsum Loremipsum' },\n      ],\n      dataLineItems: [\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'text', value: 'Loremipsum' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'blue-tag', value: 'Lorem', secondaryValue: '1234,5678' },\n      ],\n    },\n    // Default data to match the second block in the image\n    {\n      infoLineItems: [\n        { type: 'yellow-tag', value: 'Lorem', secondaryValue: '\"Ipsum\"' },\n        { type: 'text', value: 'Loremipsum Loremipsum' },\n      ],\n      dataLineItems: [\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'text', value: 'Loremipsum Loremipsum' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n      ],\n    },\n  ];\n}\n",
            "properties": [
                {
                    "name": "dataLineItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LineItem[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "infoLineItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LineItem[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ContextAnalyticData",
            "id": "interface-ContextAnalyticData-3f15400c304e047316a5fcab2d697c8687ce3bc9d0c8de6ddc26a69bb1c6912041beafcd75d7d3b58286afb51d56b8046470922334771474741149468d2facf4",
            "file": "src/app/features/dashboard/models/dashboard-data.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Type } from '@angular/core';\nimport { AssetItem } from '../../../shared/models/asset-item.model';\nimport { ListItem } from '../../../shared/models/list-item.model';\n\nexport interface NoteData {\n  title: string;\n  subtitle: string;\n}\n\nexport interface RemediationCardData {\n  title: string;\n  header: string;\n  defaultText: string;\n  expandableText: string;\n}\n\nexport interface ImageHoverData {\n  imageUrl: string;\n  position: string;\n  title: string;\n  subtitle: string;\n  hoverComponent: Type<any>;\n}\n\nexport interface ContextRiskData {\n  assetItems: AssetItem[];\n  currentPageStart: number;\n  currentPageEnd: number;\n  totalItems: number;\n}\n\nexport interface ContextAnalyticData {\n  criticalCount: number;\n  highCount: number;\n  mediumCount: number;\n  lowCount: number;\n}\n\nexport interface DashboardData {\n  textOne: NoteData;\n  textTwo: NoteData;\n  remediationOne: RemediationCardData;\n  remediationTwo: RemediationCardData;\n  defaultItems: ListItem[];\n  nodeA: ImageHoverData;\n  nodesBC: ImageHoverData[];\n  nodeCD: ImageHoverData;\n  nodeEF: ImageHoverData;\n  contextRisk: ContextRiskData;\n  contextAnalytic: ContextAnalyticData;\n}\n",
            "properties": [
                {
                    "name": "criticalCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "highCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "lowCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "mediumCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ContextRiskData",
            "id": "interface-ContextRiskData-3f15400c304e047316a5fcab2d697c8687ce3bc9d0c8de6ddc26a69bb1c6912041beafcd75d7d3b58286afb51d56b8046470922334771474741149468d2facf4",
            "file": "src/app/features/dashboard/models/dashboard-data.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Type } from '@angular/core';\nimport { AssetItem } from '../../../shared/models/asset-item.model';\nimport { ListItem } from '../../../shared/models/list-item.model';\n\nexport interface NoteData {\n  title: string;\n  subtitle: string;\n}\n\nexport interface RemediationCardData {\n  title: string;\n  header: string;\n  defaultText: string;\n  expandableText: string;\n}\n\nexport interface ImageHoverData {\n  imageUrl: string;\n  position: string;\n  title: string;\n  subtitle: string;\n  hoverComponent: Type<any>;\n}\n\nexport interface ContextRiskData {\n  assetItems: AssetItem[];\n  currentPageStart: number;\n  currentPageEnd: number;\n  totalItems: number;\n}\n\nexport interface ContextAnalyticData {\n  criticalCount: number;\n  highCount: number;\n  mediumCount: number;\n  lowCount: number;\n}\n\nexport interface DashboardData {\n  textOne: NoteData;\n  textTwo: NoteData;\n  remediationOne: RemediationCardData;\n  remediationTwo: RemediationCardData;\n  defaultItems: ListItem[];\n  nodeA: ImageHoverData;\n  nodesBC: ImageHoverData[];\n  nodeCD: ImageHoverData;\n  nodeEF: ImageHoverData;\n  contextRisk: ContextRiskData;\n  contextAnalytic: ContextAnalyticData;\n}\n",
            "properties": [
                {
                    "name": "assetItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AssetItem[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "currentPageEnd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "currentPageStart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "totalItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DashboardData",
            "id": "interface-DashboardData-3f15400c304e047316a5fcab2d697c8687ce3bc9d0c8de6ddc26a69bb1c6912041beafcd75d7d3b58286afb51d56b8046470922334771474741149468d2facf4",
            "file": "src/app/features/dashboard/models/dashboard-data.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Type } from '@angular/core';\nimport { AssetItem } from '../../../shared/models/asset-item.model';\nimport { ListItem } from '../../../shared/models/list-item.model';\n\nexport interface NoteData {\n  title: string;\n  subtitle: string;\n}\n\nexport interface RemediationCardData {\n  title: string;\n  header: string;\n  defaultText: string;\n  expandableText: string;\n}\n\nexport interface ImageHoverData {\n  imageUrl: string;\n  position: string;\n  title: string;\n  subtitle: string;\n  hoverComponent: Type<any>;\n}\n\nexport interface ContextRiskData {\n  assetItems: AssetItem[];\n  currentPageStart: number;\n  currentPageEnd: number;\n  totalItems: number;\n}\n\nexport interface ContextAnalyticData {\n  criticalCount: number;\n  highCount: number;\n  mediumCount: number;\n  lowCount: number;\n}\n\nexport interface DashboardData {\n  textOne: NoteData;\n  textTwo: NoteData;\n  remediationOne: RemediationCardData;\n  remediationTwo: RemediationCardData;\n  defaultItems: ListItem[];\n  nodeA: ImageHoverData;\n  nodesBC: ImageHoverData[];\n  nodeCD: ImageHoverData;\n  nodeEF: ImageHoverData;\n  contextRisk: ContextRiskData;\n  contextAnalytic: ContextAnalyticData;\n}\n",
            "properties": [
                {
                    "name": "contextAnalytic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ContextAnalyticData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "contextRisk",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ContextRiskData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "defaultItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ListItem[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "nodeA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ImageHoverData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "nodeCD",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ImageHoverData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "nodeEF",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ImageHoverData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "nodesBC",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ImageHoverData[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "remediationOne",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RemediationCardData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "remediationTwo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RemediationCardData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "textOne",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NoteData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "textTwo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NoteData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DataLineItem",
            "id": "interface-DataLineItem-662abb9cef0f5f2f06c6f47cf3b75b819247004b169b93fbec253f60be1378d20bf483b877d8960ee40df905f27f152ceb74a65946bb730e92ca2a7e603cc48c",
            "file": "src/app/features/dashboard/components/frametwo-card/frametwo-card.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\n/**\n * Defines the structure for an item in the data line,\n * which can be either plain text or a styled tag.\n */\nexport interface DataLineItem {\n  type: 'text' | 'tag';\n  value: string;\n}\n\n@Component({\n  selector: 'app-frametwo-card',\n  imports: [CommonModule],\n  templateUrl: './frametwo-card.component.html',\n  styleUrl: './frametwo-card.component.scss',\n})\nexport class FrametwoCardComponent {\n  /**\n   * The main title next to the server icon.\n   */\n  @Input() title: string = 'Loremipsu';\n\n  /**\n   * The label for the middle info line (e.g., \"Lorem:\").\n   */\n  @Input() infoLineLabel: string = 'Lorem:';\n\n  /**\n   * The plain text part of the info line.\n   */\n  @Input() infoLineText: string = 'Loremipsum Loremipsum';\n\n  /**\n   * The version number in the tag on the info line.\n   */\n  @Input() infoLineVersion: string = '1.2.3.4';\n\n  /**\n   * An array of items to display in the bottom row.\n   * Each item specifies its type ('text' or 'tag') and its value.\n   */\n  @Input() dataLineItems: DataLineItem[] = [\n    { type: 'tag', value: '1.2.3.4' },\n    { type: 'text', value: 'Loremipsum' },\n    { type: 'tag', value: '1.2.3.4' },\n    { type: 'tag', value: '1.2.3.4' },\n  ];\n}\n",
            "properties": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"text\" | \"tag\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "description": "<p>Defines the structure for an item in the data line,\nwhich can be either plain text or a styled tag.</p>\n",
            "rawdescription": "\n\nDefines the structure for an item in the data line,\nwhich can be either plain text or a styled tag.\n",
            "methods": [],
            "extends": []
        },
        {
            "name": "ImageHoverData",
            "id": "interface-ImageHoverData-3f15400c304e047316a5fcab2d697c8687ce3bc9d0c8de6ddc26a69bb1c6912041beafcd75d7d3b58286afb51d56b8046470922334771474741149468d2facf4",
            "file": "src/app/features/dashboard/models/dashboard-data.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Type } from '@angular/core';\nimport { AssetItem } from '../../../shared/models/asset-item.model';\nimport { ListItem } from '../../../shared/models/list-item.model';\n\nexport interface NoteData {\n  title: string;\n  subtitle: string;\n}\n\nexport interface RemediationCardData {\n  title: string;\n  header: string;\n  defaultText: string;\n  expandableText: string;\n}\n\nexport interface ImageHoverData {\n  imageUrl: string;\n  position: string;\n  title: string;\n  subtitle: string;\n  hoverComponent: Type<any>;\n}\n\nexport interface ContextRiskData {\n  assetItems: AssetItem[];\n  currentPageStart: number;\n  currentPageEnd: number;\n  totalItems: number;\n}\n\nexport interface ContextAnalyticData {\n  criticalCount: number;\n  highCount: number;\n  mediumCount: number;\n  lowCount: number;\n}\n\nexport interface DashboardData {\n  textOne: NoteData;\n  textTwo: NoteData;\n  remediationOne: RemediationCardData;\n  remediationTwo: RemediationCardData;\n  defaultItems: ListItem[];\n  nodeA: ImageHoverData;\n  nodesBC: ImageHoverData[];\n  nodeCD: ImageHoverData;\n  nodeEF: ImageHoverData;\n  contextRisk: ContextRiskData;\n  contextAnalytic: ContextAnalyticData;\n}\n",
            "properties": [
                {
                    "name": "hoverComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Type<any>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "LineItem",
            "id": "interface-LineItem-c3191fcb64bc81b94e1f557c2ec4e8d9b9ad0047fad85225ea1960d8be04ed32c379df02b1116887c7386682ef537dd83cadb7c85d8113f0ad0e01fdfb2f6c07",
            "file": "src/app/features/dashboard/components/framethree-card/framethree-card.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Define the types for items that can appear in a line\nexport type LineItemType = 'text' | 'yellow-tag' | 'green-tag' | 'purple-tag' | 'blue-tag';\n\nexport interface LineItem {\n  type: LineItemType;\n  value: string;\n  // Optional secondary value for tags like \"Lorem\" \"Ipsum\"\n  secondaryValue?: string;\n}\n\n// Define the structure for a single content block\nexport interface ContentBlock {\n  infoLineItems: LineItem[];\n  dataLineItems: LineItem[];\n}\n\n@Component({\n  selector: 'app-framethree-card',\n  imports: [CommonModule],\n  templateUrl: './framethree-card.component.html',\n  styleUrl: './framethree-card.component.scss',\n})\nexport class FramethreeCardComponent {\n  /**\n   * The main title next to the server icon.\n   */\n  @Input() title: string = 'Loremipsum';\n\n  /**\n   * An array of content blocks to be rendered.\n   * Each block contains an info line and a data line.\n   */\n  @Input() contentBlocks: ContentBlock[] = [\n    // Default data to match the first block in the image\n    {\n      infoLineItems: [\n        { type: 'yellow-tag', value: 'Lorem', secondaryValue: '\"Ipsum\"' },\n        { type: 'green-tag', value: 'Lorem' },\n        { type: 'text', value: 'Loremipsum Loremipsum' },\n      ],\n      dataLineItems: [\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'text', value: 'Loremipsum' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'blue-tag', value: 'Lorem', secondaryValue: '1234,5678' },\n      ],\n    },\n    // Default data to match the second block in the image\n    {\n      infoLineItems: [\n        { type: 'yellow-tag', value: 'Lorem', secondaryValue: '\"Ipsum\"' },\n        { type: 'text', value: 'Loremipsum Loremipsum' },\n      ],\n      dataLineItems: [\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'text', value: 'Loremipsum Loremipsum' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n      ],\n    },\n  ];\n}\n",
            "properties": [
                {
                    "name": "secondaryValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LineItemType",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ListItem",
            "id": "interface-ListItem-52e0b81e236144c8eedf605056dd0e4689c14fd0af405dec01a9e4ed976ae08f87183a5d37f966c790ffd75ea28311424ca0d5762fd33e8333d4e8aadd473531",
            "file": "src/app/shared/models/list-item.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ListItem {\n  label: string;\n  value: string;\n  hasCheckmark?: boolean;\n}\n",
            "properties": [
                {
                    "name": "hasCheckmark",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ListItem",
            "id": "interface-ListItem-a48d48ddfad090d52debbf038993fd92d8c13ff7ed467659f194ca4e39c39832b764bfedf56db33d5168d0e2ba0eeccd6cdf75cb31d19ba7983e72c077c78353-1",
            "file": "src/app/shared/components/list/list.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Define a type for the list items to ensure type safety and clean code\nexport interface ListItem {\n  label: string;\n  value: string;\n  hasCheckmark?: boolean; // Optional property for the green checkmark\n}\n\n@Component({\n  selector: 'app-list',\n  standalone: true,\n  imports: [CommonModule], // Required for *ngFor and *ngIf\n  templateUrl: './list.component.html',\n})\nexport class ListComponent {\n  /**\n   * An array of objects, where each object represents a row in the list.\n   */\n  @Input() items: ListItem[] = [];\n}\n",
            "properties": [
                {
                    "name": "hasCheckmark",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ListItem-1"
        },
        {
            "name": "NavigationState",
            "id": "interface-NavigationState-bdf08b1dfc3627751c835295549ed0ebd41490524b9fefe09e9bf4208d069c889c427f61f9bf4a65ef21daa987c1e7d3b272d71d3df87fef06c536f8da493f1c",
            "file": "src/app/core/services/navigation.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable, signal } from '@angular/core';\n\nexport interface NavigationState {\n  activeItemId: string;\n  userName: string;\n  userRole: string;\n  isSidenavExpanded: boolean;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationService {\n  private readonly _navigationState = signal<NavigationState>({\n    activeItemId: 'discover',\n    userName: 'Lorem',\n    userRole: 'Lorem',\n    isSidenavExpanded: false,\n  });\n\n  public readonly navigationState = this._navigationState.asReadonly();\n\n  public toggleSidenav(): void {\n    this._navigationState.update(state => ({\n      ...state,\n      isSidenavExpanded: !state.isSidenavExpanded,\n    }));\n  }\n\n  public setActiveItem(itemId: string): void {\n    this._navigationState.update(state => ({\n      ...state,\n      activeItemId: itemId,\n    }));\n  }\n\n  public updateUserInfo(userName: string, userRole: string): void {\n    this._navigationState.update(state => ({\n      ...state,\n      userName,\n      userRole,\n    }));\n  }\n\n  public handleNavItemClick(itemId: string): void {\n    this.setActiveItem(itemId);\n    console.log('Navigation item clicked:', itemId);\n  }\n\n  public handleLogout(): void {\n    console.log('User logout requested');\n    // Implement logout logic here\n  }\n}\n",
            "properties": [
                {
                    "name": "activeItemId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "isSidenavExpanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "userName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "userRole",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "NavItem",
            "id": "interface-NavItem-92e0f182d0b6a4a94f32b652532743496b7c9b16840ed9b62394bb1b3cb6a762dc81a4059fd712c90041b4cc86cdd9269bf9de69bd7e8c3d53a5f9b5870c95e1",
            "file": "src/app/layout/components/sidenav/sidenav.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Define a type for a navigation item for clean, reusable code\nexport interface NavItem {\n  id: string; // Unique identifier for the item\n  label: string;\n  iconSvgPath: string; // The 'd' attribute of an SVG <path>\n}\n\n@Component({\n  selector: 'app-sidenav',\n  standalone: true,\n  imports: [CommonModule], // Required for *ngFor, ngClass, etc.\n  templateUrl: './sidenav.component.html',\n})\nexport class SidenavComponent {\n  @Input() activeItemId: string = 'dashboard';\n  @Input() userName: string = 'Lorem';\n  @Input() userRole: string = 'Lorem';\n\n  @Output() navItemClicked = new EventEmitter<string>();\n  @Output() logoutClicked = new EventEmitter<void>();\n  @Output() toggleClicked = new EventEmitter<void>();\n\n  @Input() isExpanded: boolean = true;\n\n  isHovering: boolean = false;\n\n  // --- Navigation Data ---\n  // You can easily add, remove, or reorder items here\n  topNavItems: NavItem[] = [\n    { id: 'dashboard', label: 'Lorem', iconSvgPath: 'sidenav/1.svg' },\n    { id: 'alerts', label: 'Lorem', iconSvgPath: 'sidenav/2.svg' },\n    { id: 'reports', label: 'Lorem', iconSvgPath: 'sidenav/3.svg' },\n    { id: 'discover', label: 'Lorem', iconSvgPath: 'sidenav/4.svg' },\n    { id: 'deploy', label: 'Lorem', iconSvgPath: 'sidenav/5.svg' },\n    { id: 'docs', label: 'Lorem', iconSvgPath: 'sidenav/6.svg' },\n    { id: 'filters', label: 'Lorem', iconSvgPath: 'sidenav/7.svg' },\n  ];\n\n  bottomNavItems: NavItem[] = [\n    { id: 'settings', label: 'Lorem', iconSvgPath: 'sidenav/9.svg' },\n    { id: 'help', label: 'Lorem', iconSvgPath: 'sidenav/8.svg' },\n  ];\n\n  toggleSidenav(): void {\n    this.isExpanded = !this.isExpanded;\n  }\n\n  handleItemClick(id: string): void {\n    this.activeItemId = id;\n    this.navItemClicked.emit(id);\n  }\n}\n",
            "properties": [
                {
                    "name": "iconSvgPath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "NoteData",
            "id": "interface-NoteData-3f15400c304e047316a5fcab2d697c8687ce3bc9d0c8de6ddc26a69bb1c6912041beafcd75d7d3b58286afb51d56b8046470922334771474741149468d2facf4",
            "file": "src/app/features/dashboard/models/dashboard-data.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Type } from '@angular/core';\nimport { AssetItem } from '../../../shared/models/asset-item.model';\nimport { ListItem } from '../../../shared/models/list-item.model';\n\nexport interface NoteData {\n  title: string;\n  subtitle: string;\n}\n\nexport interface RemediationCardData {\n  title: string;\n  header: string;\n  defaultText: string;\n  expandableText: string;\n}\n\nexport interface ImageHoverData {\n  imageUrl: string;\n  position: string;\n  title: string;\n  subtitle: string;\n  hoverComponent: Type<any>;\n}\n\nexport interface ContextRiskData {\n  assetItems: AssetItem[];\n  currentPageStart: number;\n  currentPageEnd: number;\n  totalItems: number;\n}\n\nexport interface ContextAnalyticData {\n  criticalCount: number;\n  highCount: number;\n  mediumCount: number;\n  lowCount: number;\n}\n\nexport interface DashboardData {\n  textOne: NoteData;\n  textTwo: NoteData;\n  remediationOne: RemediationCardData;\n  remediationTwo: RemediationCardData;\n  defaultItems: ListItem[];\n  nodeA: ImageHoverData;\n  nodesBC: ImageHoverData[];\n  nodeCD: ImageHoverData;\n  nodeEF: ImageHoverData;\n  contextRisk: ContextRiskData;\n  contextAnalytic: ContextAnalyticData;\n}\n",
            "properties": [
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "RemediationCardData",
            "id": "interface-RemediationCardData-3f15400c304e047316a5fcab2d697c8687ce3bc9d0c8de6ddc26a69bb1c6912041beafcd75d7d3b58286afb51d56b8046470922334771474741149468d2facf4",
            "file": "src/app/features/dashboard/models/dashboard-data.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Type } from '@angular/core';\nimport { AssetItem } from '../../../shared/models/asset-item.model';\nimport { ListItem } from '../../../shared/models/list-item.model';\n\nexport interface NoteData {\n  title: string;\n  subtitle: string;\n}\n\nexport interface RemediationCardData {\n  title: string;\n  header: string;\n  defaultText: string;\n  expandableText: string;\n}\n\nexport interface ImageHoverData {\n  imageUrl: string;\n  position: string;\n  title: string;\n  subtitle: string;\n  hoverComponent: Type<any>;\n}\n\nexport interface ContextRiskData {\n  assetItems: AssetItem[];\n  currentPageStart: number;\n  currentPageEnd: number;\n  totalItems: number;\n}\n\nexport interface ContextAnalyticData {\n  criticalCount: number;\n  highCount: number;\n  mediumCount: number;\n  lowCount: number;\n}\n\nexport interface DashboardData {\n  textOne: NoteData;\n  textTwo: NoteData;\n  remediationOne: RemediationCardData;\n  remediationTwo: RemediationCardData;\n  defaultItems: ListItem[];\n  nodeA: ImageHoverData;\n  nodesBC: ImageHoverData[];\n  nodeCD: ImageHoverData;\n  nodeEF: ImageHoverData;\n  contextRisk: ContextRiskData;\n  contextAnalytic: ContextAnalyticData;\n}\n",
            "properties": [
                {
                    "name": "defaultText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "expandableText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "RiskListItem",
            "id": "interface-RiskListItem-b8b7a627b7ad7d8d5af1f2e3e1f260321592170ee110c43be114c5f0ab692295644f92f4832057b364ace042d467a7aef18f95c9dc5b52b93d7ea9104086b733",
            "file": "src/app/features/dashboard/components/context-analytic-card/context-analytic-card.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Define a type for the list items to keep the code clean\ninterface RiskListItem {\n  name: string;\n  count: number;\n  colorClass: string;\n}\n\n@Component({\n  selector: 'app-context-analytic-card',\n  standalone: true,\n  imports: [CommonModule], // Required for *ngFor and ngClass\n  templateUrl: './context-analytic-card.component.html',\n})\nexport class ContextAnalyticCardComponent implements OnChanges {\n  @Input() criticalCount: number = 0;\n  @Input() highCount: number = 0;\n  @Input() mediumCount: number = 0;\n  @Input() lowCount: number = 0;\n\n  totalCount: number = 0;\n  circleBorderClass: string = 'border-gray-200';\n  riskList: RiskListItem[] = [];\n\n  /**\n   * This lifecycle hook runs whenever an @Input() property changes.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    this.updateComponentState();\n  }\n\n  private updateComponentState(): void {\n    // 1. Calculate the total count\n    this.totalCount = this.criticalCount + this.highCount + this.mediumCount + this.lowCount;\n\n    // 2. Determine the circle's border color based on the highest risk\n    if (this.criticalCount > 0) {\n      this.circleBorderClass = 'border-[#C6190D]';\n    } else if (this.highCount > 0) {\n      this.circleBorderClass = 'border-[#E5372B]';\n    } else if (this.mediumCount > 0) {\n      this.circleBorderClass = 'border-[#EBA622]';\n    } else if (this.lowCount > 0) {\n      this.circleBorderClass = 'border-[#08B94E]';\n    } else {\n      // Default color for a \"safe\" state\n      this.circleBorderClass = 'border-gray-200';\n    }\n\n    // 3. Build the array for the list to be used in the template\n    this.riskList = [\n      { name: 'Critical', count: this.criticalCount, colorClass: 'bg-red-700' },\n      { name: 'High', count: this.highCount, colorClass: 'bg-orange-500' },\n      { name: 'Medium', count: this.mediumCount, colorClass: 'bg-yellow-500' },\n      { name: 'Low', count: this.lowCount, colorClass: 'bg-green-500' },\n    ];\n  }\n}\n",
            "properties": [
                {
                    "name": "colorClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ZoomConfig",
            "id": "interface-ZoomConfig-ea3f819db26c373ef749cfbfa2fa2b0cd91d29e1fad12bf779a76ffc188abdde596eaf4ec2039b24d43808c3a887085303a9d98bd762b6ae714599020d665d67",
            "file": "src/app/core/services/zoom.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable, signal } from '@angular/core';\n\nexport interface ZoomConfig {\n  step: number;\n  min: number;\n  max: number;\n  initial: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZoomService {\n  private readonly _defaultConfig: ZoomConfig = {\n    step: 0.1,\n    min: 0.5,\n    max: 2.0,\n    initial: 0.8,\n  };\n\n  private readonly _zoomLevel = signal(this._defaultConfig.initial);\n  private readonly _config = signal(this._defaultConfig);\n\n  public readonly zoomLevel = this._zoomLevel.asReadonly();\n  public readonly config = this._config.asReadonly();\n\n  public zoomIn(): void {\n    const currentLevel = this._zoomLevel();\n    const newLevel = Math.min(this._config().max, currentLevel + this._config().step);\n    this._zoomLevel.set(newLevel);\n  }\n\n  public zoomOut(): void {\n    const currentLevel = this._zoomLevel();\n    const newLevel = Math.max(this._config().min, currentLevel - this._config().step);\n    this._zoomLevel.set(newLevel);\n  }\n\n  public resetZoom(): void {\n    this._zoomLevel.set(this._config().initial);\n  }\n\n  public setZoomLevel(level: number): void {\n    const clampedLevel = Math.max(this._config().min, Math.min(this._config().max, level));\n    this._zoomLevel.set(clampedLevel);\n  }\n\n  public updateConfig(newConfig: Partial<ZoomConfig>): void {\n    this._config.update(current => ({\n      ...current,\n      ...newConfig,\n    }));\n  }\n}\n",
            "properties": [
                {
                    "name": "initial",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "step",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "DashboardDataService",
            "id": "injectable-DashboardDataService-ad463f8d1ec8f623b502e105aa8fb82e39b8e7dadafb2cc98940137a3edf102ea9e39c0f803797487e622f3c5ae0d2f20057dfb01c011c2ae422e3b496201725",
            "file": "src/app/features/dashboard/services/dashboard-data.service.ts",
            "properties": [
                {
                    "name": "_dashboardData",
                    "defaultValue": "signal<DashboardData>({\n    textOne: {\n      title: 'Description',\n      subtitle:\n        'Lorem Ipsum Dolor Sit Amet Consectetur. Aenean Sodales Pellentesque Gravida Nibh Et Magna Faucibus. Dui Commodo Ut Metus Amet Egestas Habitant Viverra. Quisque Fusce Senectus Facilisis Non Diam Leo Nulla Sem Pellentesque. Sit In Vel Sed Cursus Metus Sit Fringilla Vestibulum.',\n    },\n    textTwo: {\n      title: 'Extract',\n      subtitle:\n        'Lorem ipsum dolor sit amet consectetur. Tempus a id adipiscing fames egestas tellus dis pretium tempus. Justo nisl nisl lorem lectus id ornare. Rhoncus in egestas in amet porttitor pellentesque sit. Amet gravida integer velit felis. Eu consectetur interdum auctor sed aliquam. Eu pulvinar accumsan sed id. Duis a aliquam eu quisque commodo lectus. Lectus ipsum velit purus viverra vulputate viverra in nunc nulla. Euismod rhoncus mauris urna orci gravida sagittis netus. Amet mus in vel etiam. Interdum habitant congue massa in etiam sit. Commodo nibh viverra lobortis augue lorem quam lorem suspendisse.',\n    },\n    remediationOne: {\n      title: 'Server',\n      header: 'Lorem T',\n      defaultText: 'Lorem Ipsum Dolor Sit Amet Consectetur.',\n      expandableText:\n        'Lorem Ipsum Dolor Sit Amet Consectetur. Nunc Vitae Tortor Convallis Vitae Arcu. Magna.',\n    },\n    remediationTwo: {\n      title: 'Server',\n      header: 'Lorem P',\n      defaultText: 'Lorem ipsum dolor sit amet consectetur.',\n      expandableText:\n        'Lorem ipsum dolor sit amet consectetur. Quis viverra etiam pellentesque lectus semper in massa purus. Auctor aenean aenean senectus massa dignissim vehicula mi erat purus. Praesent scelerisque aliquet metus sagittis dictum sed sed. Sed venenatis sed urna quam.',\n    },\n    defaultItems: [\n      { label: 'Lorem Ipsum Dolor', value: '10/19/2017' },\n      { label: 'Lorem Ipsum Dolor', value: 'Ut' },\n      { label: 'Lorem Ipsum Dolor', value: 'Eros' },\n      { label: 'Lorem Ipsum Dolor', value: 'Yes', hasCheckmark: true },\n      { label: 'Lorem Ipsum Dolor', value: 'Sit' },\n      { label: 'Lorem Ipsum Dolor', value: 'Lorem Ipsum Dolor' },\n      { label: 'Lorem Ipsum Dolor', value: 'Lorem Ipsum Dolor' },\n    ],\n    nodeA: {\n      imageUrl: 'mask.svg',\n      position: 'left-bottom',\n      title: 'Loremipsu',\n      subtitle: '',\n      hoverComponent: VulnerabilitiesCardComponent,\n    },\n    nodesBC: [\n      {\n        imageUrl: 'frametwo.svg',\n        position: 'bottom-center',\n        title: 'Loremipsu',\n        subtitle: '',\n        hoverComponent: FrametwoCardComponent,\n      },\n      {\n        imageUrl: 'frametwo.svg',\n        position: 'bottom-center',\n        title: 'Loremipsumm',\n        subtitle: '',\n        hoverComponent: FrametwoCardComponent,\n      },\n    ],\n    nodeCD: {\n      imageUrl: 'frameone.svg',\n      position: 'right-bottom',\n      title: 'Loremipsu',\n      subtitle: '192.168.1.1',\n      hoverComponent: FrameoneCardComponent,\n    },\n    nodeEF: {\n      imageUrl: 'frameone.svg',\n      position: 'right-bottom',\n      title: 'Loremipsu',\n      subtitle: '192.168.1.1',\n      hoverComponent: FrameoneCardComponent,\n    },\n    contextRisk: {\n      assetItems: [\n        { title: 'Loremipsumdolorsit', subtitle: '10.0.1.5', riskLevel: 'Critical' },\n        { title: 'Loremipsumdolorsit', subtitle: '10.0.2.10', riskLevel: 'High' },\n      ],\n      currentPageStart: 11,\n      currentPageEnd: 14,\n      totalItems: 57,\n    },\n    contextAnalytic: {\n      criticalCount: 2,\n      highCount: 0,\n      mediumCount: 0,\n      lowCount: 0,\n    },\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "dashboardData",
                    "defaultValue": "this._dashboardData.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 99,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "updateDashboardData",
                    "args": [
                        {
                            "name": "data",
                            "type": "Partial<DashboardData>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Partial<DashboardData>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, signal } from '@angular/core';\nimport { DashboardData } from '../models/dashboard-data.model';\nimport { VulnerabilitiesCardComponent } from '../components/vulnerabilities-card/vulnerabilities-card.component';\nimport { FrametwoCardComponent } from '../components/frametwo-card/frametwo-card.component';\nimport { FrameoneCardComponent } from '../components/frameone-card/frameone-card.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DashboardDataService {\n  private readonly _dashboardData = signal<DashboardData>({\n    textOne: {\n      title: 'Description',\n      subtitle:\n        'Lorem Ipsum Dolor Sit Amet Consectetur. Aenean Sodales Pellentesque Gravida Nibh Et Magna Faucibus. Dui Commodo Ut Metus Amet Egestas Habitant Viverra. Quisque Fusce Senectus Facilisis Non Diam Leo Nulla Sem Pellentesque. Sit In Vel Sed Cursus Metus Sit Fringilla Vestibulum.',\n    },\n    textTwo: {\n      title: 'Extract',\n      subtitle:\n        'Lorem ipsum dolor sit amet consectetur. Tempus a id adipiscing fames egestas tellus dis pretium tempus. Justo nisl nisl lorem lectus id ornare. Rhoncus in egestas in amet porttitor pellentesque sit. Amet gravida integer velit felis. Eu consectetur interdum auctor sed aliquam. Eu pulvinar accumsan sed id. Duis a aliquam eu quisque commodo lectus. Lectus ipsum velit purus viverra vulputate viverra in nunc nulla. Euismod rhoncus mauris urna orci gravida sagittis netus. Amet mus in vel etiam. Interdum habitant congue massa in etiam sit. Commodo nibh viverra lobortis augue lorem quam lorem suspendisse.',\n    },\n    remediationOne: {\n      title: 'Server',\n      header: 'Lorem T',\n      defaultText: 'Lorem Ipsum Dolor Sit Amet Consectetur.',\n      expandableText:\n        'Lorem Ipsum Dolor Sit Amet Consectetur. Nunc Vitae Tortor Convallis Vitae Arcu. Magna.',\n    },\n    remediationTwo: {\n      title: 'Server',\n      header: 'Lorem P',\n      defaultText: 'Lorem ipsum dolor sit amet consectetur.',\n      expandableText:\n        'Lorem ipsum dolor sit amet consectetur. Quis viverra etiam pellentesque lectus semper in massa purus. Auctor aenean aenean senectus massa dignissim vehicula mi erat purus. Praesent scelerisque aliquet metus sagittis dictum sed sed. Sed venenatis sed urna quam.',\n    },\n    defaultItems: [\n      { label: 'Lorem Ipsum Dolor', value: '10/19/2017' },\n      { label: 'Lorem Ipsum Dolor', value: 'Ut' },\n      { label: 'Lorem Ipsum Dolor', value: 'Eros' },\n      { label: 'Lorem Ipsum Dolor', value: 'Yes', hasCheckmark: true },\n      { label: 'Lorem Ipsum Dolor', value: 'Sit' },\n      { label: 'Lorem Ipsum Dolor', value: 'Lorem Ipsum Dolor' },\n      { label: 'Lorem Ipsum Dolor', value: 'Lorem Ipsum Dolor' },\n    ],\n    nodeA: {\n      imageUrl: 'mask.svg',\n      position: 'left-bottom',\n      title: 'Loremipsu',\n      subtitle: '',\n      hoverComponent: VulnerabilitiesCardComponent,\n    },\n    nodesBC: [\n      {\n        imageUrl: 'frametwo.svg',\n        position: 'bottom-center',\n        title: 'Loremipsu',\n        subtitle: '',\n        hoverComponent: FrametwoCardComponent,\n      },\n      {\n        imageUrl: 'frametwo.svg',\n        position: 'bottom-center',\n        title: 'Loremipsumm',\n        subtitle: '',\n        hoverComponent: FrametwoCardComponent,\n      },\n    ],\n    nodeCD: {\n      imageUrl: 'frameone.svg',\n      position: 'right-bottom',\n      title: 'Loremipsu',\n      subtitle: '192.168.1.1',\n      hoverComponent: FrameoneCardComponent,\n    },\n    nodeEF: {\n      imageUrl: 'frameone.svg',\n      position: 'right-bottom',\n      title: 'Loremipsu',\n      subtitle: '192.168.1.1',\n      hoverComponent: FrameoneCardComponent,\n    },\n    contextRisk: {\n      assetItems: [\n        { title: 'Loremipsumdolorsit', subtitle: '10.0.1.5', riskLevel: 'Critical' },\n        { title: 'Loremipsumdolorsit', subtitle: '10.0.2.10', riskLevel: 'High' },\n      ],\n      currentPageStart: 11,\n      currentPageEnd: 14,\n      totalItems: 57,\n    },\n    contextAnalytic: {\n      criticalCount: 2,\n      highCount: 0,\n      mediumCount: 0,\n      lowCount: 0,\n    },\n  });\n\n  public readonly dashboardData = this._dashboardData.asReadonly();\n\n  public updateDashboardData(data: Partial<DashboardData>): void {\n    this._dashboardData.update(current => ({\n      ...current,\n      ...data,\n    }));\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "NavigationService",
            "id": "injectable-NavigationService-bdf08b1dfc3627751c835295549ed0ebd41490524b9fefe09e9bf4208d069c889c427f61f9bf4a65ef21daa987c1e7d3b272d71d3df87fef06c536f8da493f1c",
            "file": "src/app/core/services/navigation.service.ts",
            "properties": [
                {
                    "name": "_navigationState",
                    "defaultValue": "signal<NavigationState>({\n    activeItemId: 'discover',\n    userName: 'Lorem',\n    userRole: 'Lorem',\n    isSidenavExpanded: false,\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "navigationState",
                    "defaultValue": "this._navigationState.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "handleLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "handleNavItemClick",
                    "args": [
                        {
                            "name": "itemId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "itemId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setActiveItem",
                    "args": [
                        {
                            "name": "itemId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "itemId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSidenav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "updateUserInfo",
                    "args": [
                        {
                            "name": "userName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "userRole",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "userName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "userRole",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, signal } from '@angular/core';\n\nexport interface NavigationState {\n  activeItemId: string;\n  userName: string;\n  userRole: string;\n  isSidenavExpanded: boolean;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationService {\n  private readonly _navigationState = signal<NavigationState>({\n    activeItemId: 'discover',\n    userName: 'Lorem',\n    userRole: 'Lorem',\n    isSidenavExpanded: false,\n  });\n\n  public readonly navigationState = this._navigationState.asReadonly();\n\n  public toggleSidenav(): void {\n    this._navigationState.update(state => ({\n      ...state,\n      isSidenavExpanded: !state.isSidenavExpanded,\n    }));\n  }\n\n  public setActiveItem(itemId: string): void {\n    this._navigationState.update(state => ({\n      ...state,\n      activeItemId: itemId,\n    }));\n  }\n\n  public updateUserInfo(userName: string, userRole: string): void {\n    this._navigationState.update(state => ({\n      ...state,\n      userName,\n      userRole,\n    }));\n  }\n\n  public handleNavItemClick(itemId: string): void {\n    this.setActiveItem(itemId);\n    console.log('Navigation item clicked:', itemId);\n  }\n\n  public handleLogout(): void {\n    console.log('User logout requested');\n    // Implement logout logic here\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ZoomService",
            "id": "injectable-ZoomService-ea3f819db26c373ef749cfbfa2fa2b0cd91d29e1fad12bf779a76ffc188abdde596eaf4ec2039b24d43808c3a887085303a9d98bd762b6ae714599020d665d67",
            "file": "src/app/core/services/zoom.service.ts",
            "properties": [
                {
                    "name": "_config",
                    "defaultValue": "signal(this._defaultConfig)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_defaultConfig",
                    "defaultValue": "{\n    step: 0.1,\n    min: 0.5,\n    max: 2.0,\n    initial: 0.8,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZoomConfig",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_zoomLevel",
                    "defaultValue": "signal(this._defaultConfig.initial)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "config",
                    "defaultValue": "this._config.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "zoomLevel",
                    "defaultValue": "this._zoomLevel.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "resetZoom",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "setZoomLevel",
                    "args": [
                        {
                            "name": "level",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "level",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateConfig",
                    "args": [
                        {
                            "name": "newConfig",
                            "type": "Partial<ZoomConfig>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "newConfig",
                            "type": "Partial<ZoomConfig>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "zoomIn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "zoomOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, signal } from '@angular/core';\n\nexport interface ZoomConfig {\n  step: number;\n  min: number;\n  max: number;\n  initial: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZoomService {\n  private readonly _defaultConfig: ZoomConfig = {\n    step: 0.1,\n    min: 0.5,\n    max: 2.0,\n    initial: 0.8,\n  };\n\n  private readonly _zoomLevel = signal(this._defaultConfig.initial);\n  private readonly _config = signal(this._defaultConfig);\n\n  public readonly zoomLevel = this._zoomLevel.asReadonly();\n  public readonly config = this._config.asReadonly();\n\n  public zoomIn(): void {\n    const currentLevel = this._zoomLevel();\n    const newLevel = Math.min(this._config().max, currentLevel + this._config().step);\n    this._zoomLevel.set(newLevel);\n  }\n\n  public zoomOut(): void {\n    const currentLevel = this._zoomLevel();\n    const newLevel = Math.max(this._config().min, currentLevel - this._config().step);\n    this._zoomLevel.set(newLevel);\n  }\n\n  public resetZoom(): void {\n    this._zoomLevel.set(this._config().initial);\n  }\n\n  public setZoomLevel(level: number): void {\n    const clampedLevel = Math.max(this._config().min, Math.min(this._config().max, level));\n    this._zoomLevel.set(clampedLevel);\n  }\n\n  public updateConfig(newConfig: Partial<ZoomConfig>): void {\n    this._config.update(current => ({\n      ...current,\n      ...newConfig,\n    }));\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-b82c9af8b766a423a1d6677eaa33c0d1c688913262f919d27ab1eeaa2556bae983eff71126b3fcbca41b984d0e4768e7ce9d0cc318c020ee1a966bc7974e6abb",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_navigationService",
                    "defaultValue": "inject(NavigationService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "navigationState",
                    "defaultValue": "this._navigationService.navigationState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onLogoutClicked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onNavItemClicked",
                    "args": [
                        {
                            "name": "itemId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "itemId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onToggleSidenav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SidenavComponent",
                    "type": "component"
                },
                {
                    "name": "DashboardComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { SidenavComponent } from './layout/components/sidenav/sidenav.component';\nimport { NavigationService } from './core/services/navigation.service';\nimport { DashboardComponent } from './features/dashboard/components/dashboard/dashboard.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, SidenavComponent, DashboardComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  private readonly _navigationService = inject(NavigationService);\n\n  public readonly navigationState = this._navigationService.navigationState;\n\n  public onToggleSidenav(): void {\n    this._navigationService.toggleSidenav();\n  }\n\n  public onNavItemClicked(itemId: string): void {\n    this._navigationService.handleNavItemClick(itemId);\n  }\n\n  public onLogoutClicked(): void {\n    this._navigationService.handleLogout();\n  }\n}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"flex h-screen overflow-hidden bg-gray-50\">\n  <!-- Mobile Menu Toggle -->\n  <button\n    (click)=\"onToggleSidenav()\"\n    class=\"fixed top-0 left-0 z-50 text-gray-600 hover:text-gray-900 lg:hidden cursor-pointer\"\n    aria-label=\"Toggle navigation menu\"\n  >\n    <svg\n      class=\"w-6 h-6\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke-width=\"1.5\"\n      stroke=\"currentColor\"\n    >\n      <path\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        d=\"M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5\"\n      />\n    </svg>\n  </button>\n\n  <!-- Sidenav -->\n  <div class=\"flex-shrink-0\">\n    <app-sidenav\n      [isExpanded]=\"navigationState().isSidenavExpanded\"\n      [activeItemId]=\"navigationState().activeItemId\"\n      [userName]=\"navigationState().userName\"\n      [userRole]=\"navigationState().userRole\"\n      (toggleClicked)=\"onToggleSidenav()\"\n      (navItemClicked)=\"onNavItemClicked($event)\"\n      (logoutClicked)=\"onLogoutClicked()\"\n    >\n    </app-sidenav>\n  </div>\n\n  <!-- Main Content -->\n  <main class=\"flex-1 min-w-0\">\n    <app-dashboard></app-dashboard>\n  </main>\n</div>\n"
        },
        {
            "name": "ContextAnalyticCardComponent",
            "id": "component-ContextAnalyticCardComponent-b8b7a627b7ad7d8d5af1f2e3e1f260321592170ee110c43be114c5f0ab692295644f92f4832057b364ace042d467a7aef18f95c9dc5b52b93d7ea9104086b733",
            "file": "src/app/features/dashboard/components/context-analytic-card/context-analytic-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-context-analytic-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./context-analytic-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "criticalCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "highCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "lowCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "mediumCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "circleBorderClass",
                    "defaultValue": "'border-gray-200'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "riskList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RiskListItem[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "totalCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThis lifecycle hook runs whenever an @Input() property changes.\n",
                    "description": "<p>This lifecycle hook runs whenever an @Input() property changes.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateComponentState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Define a type for the list items to keep the code clean\ninterface RiskListItem {\n  name: string;\n  count: number;\n  colorClass: string;\n}\n\n@Component({\n  selector: 'app-context-analytic-card',\n  standalone: true,\n  imports: [CommonModule], // Required for *ngFor and ngClass\n  templateUrl: './context-analytic-card.component.html',\n})\nexport class ContextAnalyticCardComponent implements OnChanges {\n  @Input() criticalCount: number = 0;\n  @Input() highCount: number = 0;\n  @Input() mediumCount: number = 0;\n  @Input() lowCount: number = 0;\n\n  totalCount: number = 0;\n  circleBorderClass: string = 'border-gray-200';\n  riskList: RiskListItem[] = [];\n\n  /**\n   * This lifecycle hook runs whenever an @Input() property changes.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    this.updateComponentState();\n  }\n\n  private updateComponentState(): void {\n    // 1. Calculate the total count\n    this.totalCount = this.criticalCount + this.highCount + this.mediumCount + this.lowCount;\n\n    // 2. Determine the circle's border color based on the highest risk\n    if (this.criticalCount > 0) {\n      this.circleBorderClass = 'border-[#C6190D]';\n    } else if (this.highCount > 0) {\n      this.circleBorderClass = 'border-[#E5372B]';\n    } else if (this.mediumCount > 0) {\n      this.circleBorderClass = 'border-[#EBA622]';\n    } else if (this.lowCount > 0) {\n      this.circleBorderClass = 'border-[#08B94E]';\n    } else {\n      // Default color for a \"safe\" state\n      this.circleBorderClass = 'border-gray-200';\n    }\n\n    // 3. Build the array for the list to be used in the template\n    this.riskList = [\n      { name: 'Critical', count: this.criticalCount, colorClass: 'bg-red-700' },\n      { name: 'High', count: this.highCount, colorClass: 'bg-orange-500' },\n      { name: 'Medium', count: this.mediumCount, colorClass: 'bg-yellow-500' },\n      { name: 'Low', count: this.lowCount, colorClass: 'bg-green-500' },\n    ];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "templateData": "<!-- Main container with shadow and rounded corners -->\n<div\n  class=\"bg-white rounded-[15px] p-5 max-w-sm sm:max-w-full h-full shadow-[0_4px_12px_rgba(0,0,0,0.10)]\"\n>\n  <!-- Title -->\n  <h3 class=\"text-lg font-meduim text-[#667085]\">Contextual Risk</h3>\n\n  <div\n    class=\"flex flex-row justify-between items-center gap-y-6 md:flex-row md:justify-between mt-4\"\n  >\n    <!-- Left Side: List of Risks (No changes needed inside this div) -->\n    <div class=\"space-y-3\">\n      <div *ngFor=\"let risk of riskList\" class=\"flex items-center space-x-3\">\n        <!-- Colored Dot -->\n        <span class=\"w-2.5 h-2.5 rounded-full\" [ngClass]=\"risk.colorClass\"></span>\n        <!-- Count -->\n        <span class=\"font-bold text-[#383874] w-4 text-right\">{{ risk.count }}</span>\n        <!-- Name -->\n        <span class=\"text-[#383874] text-base\">{{ risk.name }}</span>\n      </div>\n    </div>\n\n    <div\n      class=\"w-24 h-24 md:w-28 md:h-28 rounded-full border-8 flex items-center justify-center flex-shrink-0\"\n      [ngClass]=\"circleBorderClass\"\n    >\n      <span class=\"text-2xl md:text-3xl font-bold text-gray-700\">{{ totalCount }}</span>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "ContextRiskCardComponent",
            "id": "component-ContextRiskCardComponent-c44ed9021ddb158b96b4c7b5543cb19cbeb85a8bfb05835f3db823fe87fa2e4a056424b8b026fbf4f1fee80ed9359b4c1c32a13c2a2a36fb94240f72497c5062",
            "file": "src/app/features/dashboard/components/context-risk-card/context-risk-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-context-risk-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./context-risk-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "assetItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "AssetItem[]",
                    "decorators": []
                },
                {
                    "name": "currentPageEnd",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "currentPageStart",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "totalItems",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "nextPageClicked",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                },
                {
                    "name": "previousPageClicked",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "riskLevelClasses",
                    "defaultValue": "{\n    Critical: 'bg-[#FFE2E0] text-[#C6190D]', // <-- The background color is defined here\n    High: 'bg-orange-100 text-orange-800',\n    Medium: 'bg-yellow-100 text-yellow-800',\n    Low: 'bg-blue-100 text-blue-800',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "getRiskClass",
                    "args": [
                        {
                            "name": "riskLevel",
                            "type": "RiskLevel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "riskLevel",
                            "type": "RiskLevel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport type RiskLevel = 'Critical' | 'High' | 'Medium' | 'Low';\n\nexport interface AssetItem {\n  title: string;\n  subtitle: string;\n  riskLevel: RiskLevel;\n}\n\n@Component({\n  selector: 'app-context-risk-card',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './context-risk-card.component.html',\n})\nexport class ContextRiskCardComponent {\n  @Input() assetItems: AssetItem[] = [];\n  @Input() currentPageStart: number = 0;\n  @Input() currentPageEnd: number = 0;\n  @Input() totalItems: number = 0;\n  @Output() previousPageClicked = new EventEmitter<void>();\n  @Output() nextPageClicked = new EventEmitter<void>();\n\n  // This object DEFINES the background and text colors\n  riskLevelClasses = {\n    Critical: 'bg-[#FFE2E0] text-[#C6190D]', // <-- The background color is defined here\n    High: 'bg-orange-100 text-orange-800',\n    Medium: 'bg-yellow-100 text-yellow-800',\n    Low: 'bg-blue-100 text-blue-800',\n  };\n\n  getRiskClass(riskLevel: RiskLevel): string {\n    return this.riskLevelClasses[riskLevel] || this.riskLevelClasses['Medium'];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<!-- Main container with shadow and rounded corners -->\n<div\n  class=\"bg-white rounded-[15px] h-full max-w-sm sm:max-w-full shadow-[0_4px_12px_rgba(0,0,0,0.10)]\"\n>\n  <!-- Header -->\n  <div class=\"px-5 pt-4 pb-3\">\n    <div class=\"flex justify-between items-center\">\n      <span class=\"text-sm text-[#858D9D] font-normal\">Asset</span>\n      <span class=\"text-sm text-[#858D9D] font-normal\">Contextual Risk</span>\n    </div>\n  </div>\n\n  <!-- Divider -->\n  <hr class=\"border-gray-200\" />\n\n  <!-- List of Assets -->\n  <div class=\"divide-y divide-gray-200\">\n    <!-- Loop through each asset item -->\n    <!--\n  MAIN ITEM CONTAINER\n  - Default (mobile): 'flex-col' to stack items vertically. 'items-start' aligns them to the left.\n  - Medium screens and up (md:): 'md:flex-row' for a side-by-side layout.\n  - 'md:items-center' and 'md:justify-between' are applied only on larger screens.\n-->\n    <div\n      *ngFor=\"let item of assetItems\"\n      class=\"flex flex-col md:flex-row md:justify-between md:items-center p-4\"\n    >\n      <!-- Left Side: Icon and Text (No changes needed here) -->\n      <div class=\"flex items-center space-x-4\">\n        <img src=\"frametwo.svg\" alt=\"frametwo\" class=\"h-10 w-10\" />\n        <div>\n          <p class=\"font-semibold text-[#525D73]\">{{ item.title }}</p>\n          <p class=\"text-xs text-[#667085]\">{{ item.subtitle }}</p>\n        </div>\n      </div>\n\n      <!--\n    Right Side: Risk Tag\n    - KEY CHANGE: Added 'mt-3' to create space when stacked vertically on mobile.\n    - KEY CHANGE: 'md:mt-0' removes that margin on larger screens.\n    - KEY CHANGE: 'self-start' aligns the tag to the left on mobile, and 'md:self-auto'\n      resets the alignment for the flex-row layout.\n  -->\n      <span\n        class=\"px-3 py-1 text-sm font-bold text-base rounded-full mt-3 md:mt-0 self-start md:self-auto\"\n        [ngClass]=\"getRiskClass(item.riskLevel)\"\n      >\n        {{ item.riskLevel }}\n      </span>\n    </div>\n  </div>\n\n  <!-- Divider -->\n  <hr class=\"border-gray-200\" />\n\n  <!-- Footer / Pagination -->\n  <div class=\"flex justify-between items-center p-4 text-sm text-gray-600\">\n    <button (click)=\"previousPageClicked.emit()\" class=\"cursor-pointer hover:text-[#667085]\">\n      <svg\n        class=\"h-5 w-5\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </button>\n    <span class=\"text-[#667085] text-sm\"\n      >Showing {{ currentPageStart }}-{{ currentPageEnd }} of {{ totalItems }}</span\n    >\n    <button (click)=\"nextPageClicked.emit()\" class=\"cursor-pointer hover:text-[#667085]\">\n      <svg\n        class=\"h-5 w-5\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </button>\n  </div>\n</div>\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-6d93492e4d5097bfedfab115d9fce7ab984eeef07cfd071cf60370d11e724e43b37d92a64e447ea7584b2a264da0b7a5820331af9479eb705c170833bba30691",
            "file": "src/app/features/dashboard/components/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_dashboardDataService",
                    "defaultValue": "inject(DashboardDataService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_zoomService",
                    "defaultValue": "inject(ZoomService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "dashboardData",
                    "defaultValue": "this._dashboardDataService.dashboardData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "transformStyle",
                    "defaultValue": "computed(() => {\n    return `scale(${this.zoomLevel()})`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "zoomLevel",
                    "defaultValue": "this._zoomService.zoomLevel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "resetZoom",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "zoomIn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "zoomOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "NoteComponent",
                    "type": "component"
                },
                {
                    "name": "ListComponent",
                    "type": "component"
                },
                {
                    "name": "RemediationCardComponent",
                    "type": "component"
                },
                {
                    "name": "StatusComponent",
                    "type": "component"
                },
                {
                    "name": "ImageHoverComponent",
                    "type": "component"
                },
                {
                    "name": "ContextRiskCardComponent",
                    "type": "component"
                },
                {
                    "name": "ContextAnalyticCardComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, computed, inject } from '@angular/core';\nimport { NoteComponent } from '../../../../shared/components/note/note.component';\nimport { ListComponent } from '../../../../shared/components/list/list.component';\nimport { RemediationCardComponent } from '../remediation-card/remediation-card.component';\nimport { StatusComponent } from '../../../../shared/components/status/status.component';\nimport { ImageHoverComponent } from '../../../../shared/components/image-hover/image-hover.component';\nimport { ContextRiskCardComponent } from '../context-risk-card/context-risk-card.component';\nimport { ContextAnalyticCardComponent } from '../context-analytic-card/context-analytic-card.component';\nimport { ZoomService } from '../../../../core/services/zoom.service';\nimport { DashboardDataService } from '../../services/dashboard-data.service';\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [\n    CommonModule,\n    NoteComponent,\n    ListComponent,\n    RemediationCardComponent,\n    StatusComponent,\n    ImageHoverComponent,\n    ContextRiskCardComponent,\n    ContextAnalyticCardComponent,\n  ],\n  templateUrl: './dashboard.component.html',\n  styleUrl: './dashboard.component.scss',\n})\nexport class DashboardComponent {\n  private readonly _zoomService = inject(ZoomService);\n  private readonly _dashboardDataService = inject(DashboardDataService);\n\n  public readonly zoomLevel = this._zoomService.zoomLevel;\n  public readonly dashboardData = this._dashboardDataService.dashboardData;\n\n  public readonly transformStyle = computed(() => {\n    return `scale(${this.zoomLevel()})`;\n  });\n\n  public zoomIn(): void {\n    this._zoomService.zoomIn();\n  }\n\n  public zoomOut(): void {\n    this._zoomService.zoomOut();\n  }\n\n  public resetZoom(): void {\n    this._zoomService.resetZoom();\n  }\n}\n",
            "styleUrl": "./dashboard.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div\n  class=\"p-6 lg:p-8 flex flex-col lg:flex-row gap-6 lg:gap-8 h-full overflow-y-auto lg:overflow-y-hidden\"\n>\n  <!-- Left Panel -->\n  <div\n    class=\"w-full lg:w-[33%] flex-shrink-0 bg-white rounded-[20px] shadow-[0_4px_12px_rgba(0,0,0,0.10)] flex flex-col lg:h-full lg:overflow-y-auto p-4 no-scrollbar\"\n  >\n    <app-note\n      [title]=\"dashboardData().textOne.title\"\n      [subtitle]=\"dashboardData().textOne.subtitle\"\n    ></app-note>\n    <app-note\n      [title]=\"dashboardData().textTwo.title\"\n      [subtitle]=\"dashboardData().textTwo.subtitle\"\n    ></app-note>\n\n    <hr class=\"my-6 border-gray-200\" />\n\n    <div class=\"mb-4\">\n      <h3 class=\"text-lg sm:text-xl font-bold\">Lorem ipsum dolor sit</h3>\n    </div>\n\n    <app-list [items]=\"dashboardData().defaultItems\"></app-list>\n\n    <hr class=\"my-6 border-gray-200\" />\n\n    <app-remediation-card\n      [title]=\"dashboardData().remediationOne.title\"\n      [header]=\"dashboardData().remediationOne.header\"\n      [defaultText]=\"dashboardData().remediationOne.defaultText\"\n      [expandableText]=\"dashboardData().remediationOne.expandableText\"\n    >\n    </app-remediation-card>\n\n    <app-remediation-card\n      [title]=\"dashboardData().remediationTwo.title\"\n      [header]=\"dashboardData().remediationTwo.header\"\n      [defaultText]=\"dashboardData().remediationTwo.defaultText\"\n      [expandableText]=\"dashboardData().remediationTwo.expandableText\"\n    >\n    </app-remediation-card>\n  </div>\n\n  <!-- Main Content Panel -->\n  <div class=\"w-full p-5 lg:w-[100%] bg-white rounded-[15px] flex flex-col lg:overflow-y-auto\">\n    <app-note [title]=\"'Lorem Lorem Lorem'\" [subtitle]=\"''\"></app-note>\n\n    <div\n      class=\"bg-[#FAFAFA] overflow-x-auto lg:overflow-visible p-6 rounded-[15px] relative on-scrollbar\"\n    >\n      <!-- Zoom Controls -->\n      <div class=\"absolute top-4 right-4 z-10 hidden lg:flex items-center space-x-2\">\n        <button\n          (click)=\"zoomOut()\"\n          class=\"bg-white w-8 h-8 rounded-full flex items-center justify-center shadow hover:bg-gray-100 transition-colors\"\n          aria-label=\"Zoom out\"\n        >\n          <svg\n            class=\"w-5 h-5 text-gray-600\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"2\"\n            stroke=\"currentColor\"\n          >\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M18 12H6\" />\n          </svg>\n        </button>\n        <button\n          (click)=\"zoomIn()\"\n          class=\"bg-white w-8 h-8 rounded-full flex items-center justify-center shadow hover:bg-gray-100 transition-colors\"\n          aria-label=\"Zoom in\"\n        >\n          <svg\n            class=\"w-5 h-5 text-gray-600\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"2\"\n            stroke=\"currentColor\"\n          >\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 6v12m6-6H6\" />\n          </svg>\n        </button>\n        <button\n          (click)=\"resetZoom()\"\n          class=\"bg-white w-8 h-8 rounded-full flex items-center justify-center shadow hover:bg-gray-100 transition-colors\"\n          aria-label=\"Reset zoom\"\n        >\n          <svg\n            class=\"w-5 h-5 text-gray-600\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"1.5\"\n            stroke=\"currentColor\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              d=\"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0011.667 0l3.181-3.183m-4.991-2.695v-4.992m0 0h-4.992m4.992 0l-3.181-3.183a8.25 8.25 0 00-11.667 0L2.985 7.348z\"\n            />\n          </svg>\n        </button>\n      </div>\n\n      <!-- Network Diagram -->\n      <div class=\"flex items-center\" [style.transform]=\"transformStyle()\">\n        <!-- Node A -->\n        <div class=\"flex flex-col items-center text-center flex-shrink-0\">\n          <app-image-hover\n            [imageUrl]=\"dashboardData().nodeA.imageUrl\"\n            [position]=\"dashboardData().nodeA.position\"\n            [title]=\"dashboardData().nodeA.title\"\n            [hoverComponent]=\"dashboardData().nodeA.hoverComponent\"\n            [subtitle]=\"dashboardData().nodeA.subtitle\"\n          >\n          </app-image-hover>\n        </div>\n\n        <img src=\"arrow.svg\" alt=\"Connector Arrow\" class=\"w-24 mx-4 flex-shrink-0\" />\n\n        <!-- Nodes B & C -->\n        <div\n          class=\"flex items-center\"\n          *ngFor=\"let nodeBC of dashboardData().nodesBC; let i = index\"\n        >\n          <div class=\"flex flex-col items-center text-center flex-shrink-0\">\n            <app-image-hover\n              [imageUrl]=\"nodeBC.imageUrl\"\n              [position]=\"nodeBC.position\"\n              [title]=\"nodeBC.title\"\n              [hoverComponent]=\"nodeBC.hoverComponent\"\n              [subtitle]=\"nodeBC.subtitle\"\n            >\n            </app-image-hover>\n          </div>\n          <img\n            *ngIf=\"i < 1\"\n            src=\"arrow.svg\"\n            alt=\"Connector Arrow\"\n            class=\"w-24 mx-4 flex-shrink-0\"\n          />\n        </div>\n\n        <!-- Forking Connector -->\n        <div class=\"w-48 h-24 flex-shrink-0 mx-4\">\n          <img\n            src=\"forking-connector.svg\"\n            alt=\"Forking Connector\"\n            class=\"w-full h-full object-contain\"\n          />\n        </div>\n\n        <!-- End Nodes -->\n        <div class=\"flex flex-col space-y-8\">\n          <!-- Node CD -->\n          <div class=\"flex items-center space-x-3\">\n            <div class=\"relative flex-shrink-0\">\n              <app-image-hover\n                [imageUrl]=\"dashboardData().nodeCD.imageUrl\"\n                [position]=\"dashboardData().nodeCD.position\"\n                [title]=\"dashboardData().nodeCD.title\"\n                [hoverComponent]=\"dashboardData().nodeCD.hoverComponent\"\n                [subtitle]=\"dashboardData().nodeCD.subtitle\"\n              >\n              </app-image-hover>\n            </div>\n          </div>\n          <!-- Node EF -->\n          <div class=\"flex items-center space-x-3\">\n            <div class=\"relative flex-shrink-0\">\n              <app-image-hover\n                [imageUrl]=\"dashboardData().nodeEF.imageUrl\"\n                [position]=\"dashboardData().nodeEF.position\"\n                [title]=\"dashboardData().nodeEF.title\"\n                [hoverComponent]=\"dashboardData().nodeEF.hoverComponent\"\n                [subtitle]=\"dashboardData().nodeEF.subtitle\"\n              >\n              </app-image-hover>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <hr class=\"my-6 border-gray-200\" />\n\n      <!-- Status Indicators -->\n      <div class=\"flex items-center space-x-6\">\n        <app-status status=\"error\" title=\"Lorem\"></app-status>\n        <app-status status=\"warning\" title=\"Lorem\"></app-status>\n        <app-status status=\"success\" title=\"Lorem\"></app-status>\n      </div>\n    </div>\n\n    <app-note [title]=\"'Lorem ipsum dolor sit'\" [subtitle]=\"''\"></app-note>\n\n    <!-- Context Cards -->\n    <div class=\"flex gap-4 flex-col lg:flex-row\">\n      <div class=\"flex-1\">\n        <app-context-risk-card\n          [assetItems]=\"dashboardData().contextRisk.assetItems\"\n          [currentPageStart]=\"dashboardData().contextRisk.currentPageStart\"\n          [currentPageEnd]=\"dashboardData().contextRisk.currentPageEnd\"\n          [totalItems]=\"dashboardData().contextRisk.totalItems\"\n        >\n        </app-context-risk-card>\n      </div>\n\n      <div class=\"flex-1\">\n        <app-context-analytic-card\n          [criticalCount]=\"dashboardData().contextAnalytic.criticalCount\"\n          [highCount]=\"dashboardData().contextAnalytic.highCount\"\n          [mediumCount]=\"dashboardData().contextAnalytic.mediumCount\"\n          [lowCount]=\"dashboardData().contextAnalytic.lowCount\"\n        >\n        </app-context-analytic-card>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "FrameoneCardComponent",
            "id": "component-FrameoneCardComponent-3c8f959c091eb6328b80155bd29ca4ec34cde905739f4dfeee10c75b3a72174d73c3f200a960a6f31363cf760187fb56e6781cc37e8e31485b766b22bd6480d5",
            "file": "src/app/features/dashboard/components/frameone-card/frameone-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-frameone-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./frameone-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "dataLabel",
                    "defaultValue": "'Loremipsum'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "dataValuePrimary",
                    "defaultValue": "'Lorem'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "dataValueSecondary",
                    "defaultValue": "'1234,5678'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hasWarning",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "infoLabel",
                    "defaultValue": "'Lorem:'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "infoTextPrimary",
                    "defaultValue": "'Lorem'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "infoTextSecondary",
                    "defaultValue": "'\"Ipsum\"'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "'192.168.1.1'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'Loremipsumdolorsit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe main title of the card.\n",
                    "description": "<p>The main title of the card.</p>\n",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-frameone-card',\n  imports: [CommonModule],\n  templateUrl: './frameone-card.component.html',\n  styleUrl: './frameone-card.component.scss',\n})\nexport class FrameoneCardComponent {\n  /**\n   * The main title of the card.\n   */\n  @Input() title: string = 'Loremipsumdolorsit';\n\n  @Input() subtitle: string = '192.168.1.1';\n\n  @Input() hasWarning: boolean = true;\n\n  @Input() infoLabel: string = 'Lorem:';\n\n  @Input() infoTextPrimary: string = 'Lorem';\n\n  @Input() infoTextSecondary: string = '\"Ipsum\"';\n\n  @Input() dataLabel: string = 'Loremipsum';\n\n  @Input() dataValuePrimary: string = 'Lorem';\n\n  @Input() dataValueSecondary: string = '1234,5678';\n}\n",
            "styleUrl": "./frameone-card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<!-- Main container with shadow and rounded corners -->\n<div class=\"bg-white rounded-[15px] p-5 max-w-sm shadow-[0_4px_12px_rgba(0,0,0,0.10)]\">\n  <!-- Top Section: Icon and Title -->\n  <div class=\"flex items-center space-x-4\">\n    <!-- Icon with optional warning badge -->\n    <div class=\"relative flex-shrink-0\">\n      <img src=\"frameone.svg\" alt=\"frameone\" class=\"h-10 w-10\" />\n    </div>\n    <!-- Title and Subtitle -->\n    <div>\n      <h3 class=\"font-semibold text-sm text-[#525D73]\">{{ title }}</h3>\n      <p class=\"text-xs text-[#667085]\">{{ subtitle }}</p>\n    </div>\n  </div>\n\n  <!-- Middle Section: Info Line -->\n  <div class=\"flex items-start mt-6 space-x-2\">\n    <!-- Document Icon -->\n    <img src=\"edit.svg\" alt=\"edit\" class=\"h-5 w-5\" />\n    <p class=\"font-bold text-sm text-[#525D73]\">{{ infoLabel }}</p>\n    <span class=\"bg-[#FFF9ED] text-[#EBA622] text-sm font-medium px-2 py-1 rounded-md\">\n      <span class=\"text-[#EBA622]\">{{ infoTextPrimary }}</span> {{ infoTextSecondary }}\n    </span>\n  </div>\n\n  <!-- Bottom Section: Data Line -->\n  <div class=\"flex items-start mt-4\">\n    <p class=\"font-bold text-sm text-[#525D73]\">{{ dataLabel }}</p>\n    <span\n      class=\"bg-[#ECF5FF] text-[#0053B5] text-sm font-semibold px-2 py-1 rounded-md ml-2 sm:ml-5\"\n    >\n      {{ dataValuePrimary }} <span class=\"font-semibold\">{{ dataValueSecondary }}</span>\n    </span>\n  </div>\n</div>\n"
        },
        {
            "name": "FramethreeCardComponent",
            "id": "component-FramethreeCardComponent-c3191fcb64bc81b94e1f557c2ec4e8d9b9ad0047fad85225ea1960d8be04ed32c379df02b1116887c7386682ef537dd83cadb7c85d8113f0ad0e01fdfb2f6c07",
            "file": "src/app/features/dashboard/components/framethree-card/framethree-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-framethree-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./framethree-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "contentBlocks",
                    "defaultValue": "[\n    // Default data to match the first block in the image\n    {\n      infoLineItems: [\n        { type: 'yellow-tag', value: 'Lorem', secondaryValue: '\"Ipsum\"' },\n        { type: 'green-tag', value: 'Lorem' },\n        { type: 'text', value: 'Loremipsum Loremipsum' },\n      ],\n      dataLineItems: [\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'text', value: 'Loremipsum' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'blue-tag', value: 'Lorem', secondaryValue: '1234,5678' },\n      ],\n    },\n    // Default data to match the second block in the image\n    {\n      infoLineItems: [\n        { type: 'yellow-tag', value: 'Lorem', secondaryValue: '\"Ipsum\"' },\n        { type: 'text', value: 'Loremipsum Loremipsum' },\n      ],\n      dataLineItems: [\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'text', value: 'Loremipsum Loremipsum' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n      ],\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAn array of content blocks to be rendered.\nEach block contains an info line and a data line.\n",
                    "description": "<p>An array of content blocks to be rendered.\nEach block contains an info line and a data line.</p>\n",
                    "line": 36,
                    "type": "ContentBlock[]",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'Loremipsum'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe main title next to the server icon.\n",
                    "description": "<p>The main title next to the server icon.</p>\n",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Define the types for items that can appear in a line\nexport type LineItemType = 'text' | 'yellow-tag' | 'green-tag' | 'purple-tag' | 'blue-tag';\n\nexport interface LineItem {\n  type: LineItemType;\n  value: string;\n  // Optional secondary value for tags like \"Lorem\" \"Ipsum\"\n  secondaryValue?: string;\n}\n\n// Define the structure for a single content block\nexport interface ContentBlock {\n  infoLineItems: LineItem[];\n  dataLineItems: LineItem[];\n}\n\n@Component({\n  selector: 'app-framethree-card',\n  imports: [CommonModule],\n  templateUrl: './framethree-card.component.html',\n  styleUrl: './framethree-card.component.scss',\n})\nexport class FramethreeCardComponent {\n  /**\n   * The main title next to the server icon.\n   */\n  @Input() title: string = 'Loremipsum';\n\n  /**\n   * An array of content blocks to be rendered.\n   * Each block contains an info line and a data line.\n   */\n  @Input() contentBlocks: ContentBlock[] = [\n    // Default data to match the first block in the image\n    {\n      infoLineItems: [\n        { type: 'yellow-tag', value: 'Lorem', secondaryValue: '\"Ipsum\"' },\n        { type: 'green-tag', value: 'Lorem' },\n        { type: 'text', value: 'Loremipsum Loremipsum' },\n      ],\n      dataLineItems: [\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'text', value: 'Loremipsum' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'blue-tag', value: 'Lorem', secondaryValue: '1234,5678' },\n      ],\n    },\n    // Default data to match the second block in the image\n    {\n      infoLineItems: [\n        { type: 'yellow-tag', value: 'Lorem', secondaryValue: '\"Ipsum\"' },\n        { type: 'text', value: 'Loremipsum Loremipsum' },\n      ],\n      dataLineItems: [\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'text', value: 'Loremipsum Loremipsum' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n        { type: 'purple-tag', value: '1.2.3.4' },\n      ],\n    },\n  ];\n}\n",
            "styleUrl": "./framethree-card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bg-white rounded-[15px] p-5 max-w-lg shadow-[0_4px_12px_rgba(0,0,0,0.10)]\">\n  <!-- Top Section: Icon and Title -->\n  <div class=\"flex items-center space-x-4\">\n    <img src=\"frametwo.svg\" alt=\"frameone\" class=\"h-10 w-10\" />\n    <h3 class=\"font-semibold text-sm text-[#525D73] text-lg\">{{ title }}</h3>\n  </div>\n\n  <!-- Dynamic Content Blocks -->\n  <div class=\"mt-2 space-y-4\">\n    <ng-container *ngFor=\"let block of contentBlocks\">\n      <!-- Single Content Block -->\n      <div class=\"pt-4\">\n        <!-- Info Line -->\n        <div class=\"flex items-center space-x-2 flex-wrap\">\n          <img src=\"edit.svg\" alt=\"edit\" class=\"h-5 w-5\" />\n          <p class=\"font-semibold text-gray-800\">Lorem:</p>\n          <ng-container *ngFor=\"let item of block.infoLineItems\">\n            <span *ngIf=\"item.type === 'text'\" class=\"text-gray-700\">{{ item.value }}</span>\n            <span\n              *ngIf=\"item.type === 'yellow-tag'\"\n              class=\"bg-yellow-100 text-yellow-900 text-sm font-medium px-2 py-1 rounded-md\"\n              ><span class=\"text-yellow-700\">{{ item.value }}</span> {{ item.secondaryValue }}</span\n            >\n            <span\n              *ngIf=\"item.type === 'green-tag'\"\n              class=\"bg-green-100 text-green-800 text-sm font-semibold px-2 py-1 rounded-md\"\n              >{{ item.value }}</span\n            >\n          </ng-container>\n        </div>\n\n        <!-- Data Line -->\n        <div class=\"flex items-center mt-3 space-x-2 flex-wrap ml-7\">\n          <ng-container *ngFor=\"let item of block.dataLineItems\">\n            <span *ngIf=\"item.type === 'text'\" class=\"text-gray-700\">{{ item.value }}</span>\n            <span\n              *ngIf=\"item.type === 'purple-tag'\"\n              class=\"bg-violet-100 text-violet-800 text-sm font-semibold px-2 py-1 rounded-md\"\n              >{{ item.value }}</span\n            >\n            <span\n              *ngIf=\"item.type === 'blue-tag'\"\n              class=\"bg-blue-100 text-blue-900 text-sm font-medium px-2 py-1 rounded-md\"\n              >{{ item.value }} <span class=\"font-semibold\">{{ item.secondaryValue }}</span></span\n            >\n          </ng-container>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</div>\n"
        },
        {
            "name": "FrametwoCardComponent",
            "id": "component-FrametwoCardComponent-662abb9cef0f5f2f06c6f47cf3b75b819247004b169b93fbec253f60be1378d20bf483b877d8960ee40df905f27f152ceb74a65946bb730e92ca2a7e603cc48c",
            "file": "src/app/features/dashboard/components/frametwo-card/frametwo-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-frametwo-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./frametwo-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "dataLineItems",
                    "defaultValue": "[\n    { type: 'tag', value: '1.2.3.4' },\n    { type: 'text', value: 'Loremipsum' },\n    { type: 'tag', value: '1.2.3.4' },\n    { type: 'tag', value: '1.2.3.4' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAn array of items to display in the bottom row.\nEach item specifies its type ('text' or 'tag') and its value.\n",
                    "description": "<p>An array of items to display in the bottom row.\nEach item specifies its type (&#39;text&#39; or &#39;tag&#39;) and its value.</p>\n",
                    "line": 45,
                    "type": "DataLineItem[]",
                    "decorators": []
                },
                {
                    "name": "infoLineLabel",
                    "defaultValue": "'Lorem:'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe label for the middle info line (e.g., \"Lorem:\").\n",
                    "description": "<p>The label for the middle info line (e.g., &quot;Lorem:&quot;).</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "infoLineText",
                    "defaultValue": "'Loremipsum Loremipsum'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe plain text part of the info line.\n",
                    "description": "<p>The plain text part of the info line.</p>\n",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "infoLineVersion",
                    "defaultValue": "'1.2.3.4'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe version number in the tag on the info line.\n",
                    "description": "<p>The version number in the tag on the info line.</p>\n",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'Loremipsu'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe main title next to the server icon.\n",
                    "description": "<p>The main title next to the server icon.</p>\n",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\n/**\n * Defines the structure for an item in the data line,\n * which can be either plain text or a styled tag.\n */\nexport interface DataLineItem {\n  type: 'text' | 'tag';\n  value: string;\n}\n\n@Component({\n  selector: 'app-frametwo-card',\n  imports: [CommonModule],\n  templateUrl: './frametwo-card.component.html',\n  styleUrl: './frametwo-card.component.scss',\n})\nexport class FrametwoCardComponent {\n  /**\n   * The main title next to the server icon.\n   */\n  @Input() title: string = 'Loremipsu';\n\n  /**\n   * The label for the middle info line (e.g., \"Lorem:\").\n   */\n  @Input() infoLineLabel: string = 'Lorem:';\n\n  /**\n   * The plain text part of the info line.\n   */\n  @Input() infoLineText: string = 'Loremipsum Loremipsum';\n\n  /**\n   * The version number in the tag on the info line.\n   */\n  @Input() infoLineVersion: string = '1.2.3.4';\n\n  /**\n   * An array of items to display in the bottom row.\n   * Each item specifies its type ('text' or 'tag') and its value.\n   */\n  @Input() dataLineItems: DataLineItem[] = [\n    { type: 'tag', value: '1.2.3.4' },\n    { type: 'text', value: 'Loremipsum' },\n    { type: 'tag', value: '1.2.3.4' },\n    { type: 'tag', value: '1.2.3.4' },\n  ];\n}\n",
            "styleUrl": "./frametwo-card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<!-- Main container with shadow and rounded corners -->\n<div class=\"bg-white rounded-[15px] p-5 max-w-lg shadow-[0_4px_12px_rgba(0,0,0,0.10)]\">\n  <!-- Top Section: Icon and Title -->\n  <div class=\"flex items-center space-x-4\">\n    <img src=\"frametwo.svg\" alt=\"frameone\" class=\"h-10 w-10\" />\n    <h3 class=\"font-semibold text-sm text-[#525D73]\">{{ title }}</h3>\n  </div>\n\n  <!-- Middle Section: Info Line -->\n  <div class=\"flex items-center mt-6 space-x-2 flex-wrap\">\n    <!-- Document Icon -->\n    <img src=\"edit.svg\" alt=\"edit\" class=\"h-5 w-5\" />\n    <p class=\"font-bold text-[#525D73]\">{{ infoLineLabel }}</p>\n    <p class=\"text-[#525D73]\">{{ infoLineText }}</p>\n    <span class=\"bg-[#F2EDFF] text-[#6236CC] text-sm font-semibold px-2 py-1 rounded-md\">\n      {{ infoLineVersion }}\n    </span>\n  </div>\n\n  <!-- Bottom Section: Dynamic Data Line -->\n  <div class=\"flex items-center mt-4 space-x-2 flex-wrap\">\n    <ng-container *ngFor=\"let item of dataLineItems\">\n      <!-- Render a styled tag -->\n      <span\n        *ngIf=\"item.type === 'tag'\"\n        class=\"bg-[#F2EDFF] text-[#6236CC] text-sm font-semibold px-2 py-1 rounded-md\"\n      >\n        {{ item.value }}\n      </span>\n      <!-- Render plain text -->\n      <span *ngIf=\"item.type === 'text'\" class=\"text-gray-700\">\n        {{ item.value }}\n      </span>\n    </ng-container>\n  </div>\n</div>\n"
        },
        {
            "name": "ImageHoverComponent",
            "id": "component-ImageHoverComponent-a82964282e48dc680aa6d43dffbf3e9ac32452eb26680dd7904d40fca38b879799be05446acf6f7eb45796daba28032c6fc6501279f41f6a4322cf6a9f66ab93",
            "file": "src/app/shared/components/image-hover/image-hover.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-image-hover",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./image-hover.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hoverComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe component class to instantiate inside the popup on hover.\nType<any> is used to accept any component class.\n",
                    "description": "<p>The component class to instantiate inside the popup on hover.\nType<any> is used to accept any component class.</p>\n",
                    "line": 29,
                    "type": "Type<any>",
                    "decorators": []
                },
                {
                    "name": "imageUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe URL of the image to be displayed.\n",
                    "description": "<p>The URL of the image to be displayed.</p>\n",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'bottom-center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe position of the hover popup relative to the image.\n",
                    "description": "<p>The position of the hover popup relative to the image.</p>\n",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "container",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewContainerRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>This is a reference to the <ng-container> in our template.\nWe use it as an anchor to tell Angular where to insert the dynamic component.\n{ read: ViewContainerRef } is crucial to get the container reference.</p>\n",
                    "line": 37,
                    "rawdescription": "\n\nThis is a reference to the <ng-container> in our template.\nWe use it as an anchor to tell Angular where to insert the dynamic component.\n{ read: ViewContainerRef } is crucial to get the container reference.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dynamicComponentContainer', {read: ViewContainerRef}"
                        }
                    ],
                    "modifierKind": [
                        170,
                        123
                    ]
                },
                {
                    "name": "isHovering",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewChild, ViewContainerRef, Type, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-image-hover',\n  imports: [CommonModule],\n  templateUrl: './image-hover.component.html',\n  styleUrl: './image-hover.component.scss',\n})\nexport class ImageHoverComponent implements OnDestroy {\n  /**\n   * The URL of the image to be displayed.\n   */\n  @Input() imageUrl: string = '';\n\n  @Input() title: string = '';\n\n  @Input() subtitle: string = '';\n\n  /**\n   * The position of the hover popup relative to the image.\n   */\n  @Input() position: string = 'bottom-center';\n\n  /**\n   * The component class to instantiate inside the popup on hover.\n   * Type<any> is used to accept any component class.\n   */\n  @Input() hoverComponent?: Type<any>;\n\n  /**\n   * This is a reference to the <ng-container> in our template.\n   * We use it as an anchor to tell Angular where to insert the dynamic component.\n   * { read: ViewContainerRef } is crucial to get the container reference.\n   */\n  @ViewChild('dynamicComponentContainer', { read: ViewContainerRef })\n  private container!: ViewContainerRef;\n\n  isHovering = false;\n\n  onMouseEnter(): void {\n    this.isHovering = true;\n    // Only create the component if a class was provided\n    if (this.hoverComponent && this.container) {\n      // Clear any previous component instance\n      this.container.clear();\n      // Create a new instance of the component passed via the input\n      this.container.createComponent(this.hoverComponent);\n    }\n  }\n\n  onMouseLeave(): void {\n    this.isHovering = false;\n    // Clear the container to destroy the component instance for performance\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n\n  ngOnDestroy(): void {\n    // Ensure the container is cleared if the host component is destroyed\n    if (this.container) {\n      this.container.clear();\n    }\n  }\n}\n",
            "styleUrl": "./image-hover.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<!-- Main container using flexbox for stable layout -->\n<div\n  class=\"inline-flex flex-col items-center\"\n  (mouseenter)=\"onMouseEnter()\"\n  (mouseleave)=\"onMouseLeave()\"\n>\n  <!-- The positioning anchor for the popup -->\n  <div class=\"relative\">\n    <img [src]=\"imageUrl\" alt=\"Hoverable content\" class=\"w-12 h-12 object-cover cursor-pointer\" />\n\n    <!--\n      The popup container.\n      - KEY CHANGE: The horizontal positioning classes are now fully dynamic.\n    -->\n    <div\n      class=\"absolute z-10 w-max max-w-lg transition-all duration-200 ease-in-out\"\n      [ngClass]=\"{\n        'opacity-100 scale-100': isHovering,\n        'opacity-0 scale-95 pointer-events-none': !isHovering,\n\n        'bottom-full mb-2': position === 'top-center',\n        'top-full mt-2':\n          position === 'bottom-center' || position === 'left-bottom' || position === 'right-bottom',\n\n        'left-1/2 -translate-x-1/2': position === 'top-center' || position === 'bottom-center',\n        'left-0': position === 'left-bottom',\n        'right-0': position === 'right-bottom',\n      }\"\n    >\n      <!-- Wrapper div to ensure centering of dynamic content -->\n      <div class=\"flex justify-center items-center\">\n        <ng-container #dynamicComponentContainer></ng-container>\n      </div>\n    </div>\n  </div>\n\n  <!-- Title and Subtitle centered below the image -->\n  <div class=\"mt-2 text-center w-24\">\n    <h3 class=\"text-center mt-2 text-sm font-semibold text-[#525D73]\">{{ title }}</h3>\n    <h3 *ngIf=\"subtitle\" class=\"text-center mt-0 text-[#667085] text-[10px]\">{{ subtitle }}</h3>\n  </div>\n</div>\n"
        },
        {
            "name": "ListComponent",
            "id": "component-ListComponent-a48d48ddfad090d52debbf038993fd92d8c13ff7ed467659f194ca4e39c39832b764bfedf56db33d5168d0e2ba0eeccd6cdf75cb31d19ba7983e72c077c78353",
            "file": "src/app/shared/components/list/list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAn array of objects, where each object represents a row in the list.\n",
                    "description": "<p>An array of objects, where each object represents a row in the list.</p>\n",
                    "line": 21,
                    "type": "ListItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Define a type for the list items to ensure type safety and clean code\nexport interface ListItem {\n  label: string;\n  value: string;\n  hasCheckmark?: boolean; // Optional property for the green checkmark\n}\n\n@Component({\n  selector: 'app-list',\n  standalone: true,\n  imports: [CommonModule], // Required for *ngFor and *ngIf\n  templateUrl: './list.component.html',\n})\nexport class ListComponent {\n  /**\n   * An array of objects, where each object represents a row in the list.\n   */\n  @Input() items: ListItem[] = [];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"max-w-sm sm:max-w-full\">\n  <!-- Loop through each item in the input array -->\n  <div *ngFor=\"let item of items\" class=\"flex justify-between items-center\">\n    <!-- Left Side: The Label -->\n    <p class=\"font-bold text-[#334155] mt-2 mb-3 text-sm\">\n      {{ item.label }}\n    </p>\n\n    <!-- Right Side: The Value (with optional checkmark) -->\n    <div class=\"flex items-center space-x-2\">\n      <!-- The Checkmark Icon (only shown if hasCheckmark is true) -->\n      <svg\n        *ngIf=\"item.hasCheckmark\"\n        class=\"w-5 h-5 text-green-500\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.052-.143z\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n      <!-- The Value Text -->\n      <p class=\"text[#525D73] text-sm font-normal\">\n        {{ item.value }}\n      </p>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "NoteComponent",
            "id": "component-NoteComponent-1b2ad046e6c33765e92e9d9afd58088ca06d65c84f454ab985ef21704106d55b1d5bba312f3c78310fbc541d9d3b566dded1ef082bdeefe28e8a85033be03b8f",
            "file": "src/app/shared/components/note/note.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-note",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./note.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe optional subtitle or body text.\nThe '?' makes this input optional.\n",
                    "description": "<p>The optional subtitle or body text.\nThe &#39;?&#39; makes this input optional.</p>\n",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe main title of the note section.\n",
                    "description": "<p>The main title of the note section.</p>\n",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-note',\n  standalone: true,\n  imports: [CommonModule], // Required for *ngIf\n  templateUrl: './note.component.html',\n})\nexport class NoteComponent {\n  /**\n   * The main title of the note section.\n   */\n  @Input() title: string = '';\n\n  /**\n   * The optional subtitle or body text.\n   * The '?' makes this input optional.\n   */\n  @Input() subtitle?: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<!-- Main container for the note component -->\n<div class=\"max-w-full mt-5 mb-4\">\n  <!--\n    Title:\n    - Default (mobile): text-lg (1.125rem)\n    - Small screens and up (sm:): text-xl (1.25rem)\n  -->\n  <h3 class=\"text-xl sm:text-xl font-bold text-[#4CAF50]\">\n    {{ title }}\n  </h3>\n\n  <!--\n    Subtitle:\n    - Default (mobile): text-sm (0.875rem)\n    - Small screens and up (sm:): text-base (1rem)\n  -->\n  <p *ngIf=\"subtitle\" class=\"mt-2 text-xs sm:text-xs text-slate-600 leading-relaxed\">\n    {{ subtitle }}\n  </p>\n</div>\n"
        },
        {
            "name": "RemediationCardComponent",
            "id": "component-RemediationCardComponent-89e71edb868be553407ac02376916d4710c571e9ea410286b614eb117ccb3c77f880a9e47716f8599fe1b9bf2c25bf27333f541f4376f46a1e54841cc2f34ab9",
            "file": "src/app/features/dashboard/components/remediation-card/remediation-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-remediation-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./remediation-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "defaultText",
                    "defaultValue": "'Lorem Ipsum Dolor Sit Amet Consectetur.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "expandableText",
                    "defaultValue": "'Lorem Ipsum Dolor Sit Amet Consectetur. Nunc Vitae Tortor Convallis Vitae Arcu. Magna.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "header",
                    "defaultValue": "'Server'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'Server'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "cardClicked",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-remediation-card',\n  templateUrl: './remediation-card.component.html',\n  styleUrl: './remediation-card.component.scss',\n  standalone: true,\n  imports: [CommonModule],\n})\nexport class RemediationCardComponent {\n  @Input() title: string = 'Server';\n  @Input() header: string = 'Server';\n  @Input() defaultText: string = 'Lorem Ipsum Dolor Sit Amet Consectetur.';\n  @Input() expandableText: string =\n    'Lorem Ipsum Dolor Sit Amet Consectetur. Nunc Vitae Tortor Convallis Vitae Arcu. Magna.';\n  @Output() cardClicked = new EventEmitter<void>();\n\n  isOpen = false;\n\n  toggle() {\n    this.isOpen = !this.isOpen;\n    this.cardClicked.emit();\n  }\n}\n",
            "styleUrl": "./remediation-card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div\n  class=\"bg-white p-4 max-w-sm sm:max-w-full cursor-pointer mt-5 border border-[#F0F1F3] rounded-[15px]\"\n  (click)=\"toggle()\"\n>\n  <div>\n    <h3 class=\"text-sm font-font-bold text-[#030229] mb-3\">{{ header }}</h3>\n  </div>\n  <div class=\"flex items-center bg-[#FAFAFA] p-3\">\n    <div class=\"bg-blue-100 rounded-full p-3 mr-4\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"h-6 w-6 text-blue-500\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01\"\n        />\n      </svg>\n    </div>\n    <div class=\"flex-grow\">\n      <h2 class=\"font-semibold text-[#404A60] text-xs\">{{ title }}</h2>\n      <p class=\"text-[9.45px] text-[#667085] font-medium\">{{ title }}</p>\n    </div>\n    <div class=\"border-l border-gray-200 pl-2 ml-2 lg:pl-4 lg:ml-4 max-w-sm\">\n      <p class=\"text-[#404A60] text-sm font-normal text-balance\">{{ defaultText }}</p>\n    </div>\n  </div>\n\n  <!-- The expandable content section remains the same -->\n  <div class=\"expandable-content\" [class.open]=\"isOpen\">\n    <div class=\"pt-4 text-[#525D73] text-base font-normal\">\n      <p>{{ expandableText }}</p>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "SidenavComponent",
            "id": "component-SidenavComponent-92e0f182d0b6a4a94f32b652532743496b7c9b16840ed9b62394bb1b3cb6a762dc81a4059fd712c90041b4cc86cdd9269bf9de69bd7e8c3d53a5f9b5870c95e1",
            "file": "src/app/layout/components/sidenav/sidenav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidenav",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sidenav.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeItemId",
                    "defaultValue": "'dashboard'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isExpanded",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "userName",
                    "defaultValue": "'Lorem'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "userRole",
                    "defaultValue": "'Lorem'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "logoutClicked",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                },
                {
                    "name": "navItemClicked",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                },
                {
                    "name": "toggleClicked",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "bottomNavItems",
                    "defaultValue": "[\n    { id: 'settings', label: 'Lorem', iconSvgPath: 'sidenav/9.svg' },\n    { id: 'help', label: 'Lorem', iconSvgPath: 'sidenav/8.svg' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavItem[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "isHovering",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "topNavItems",
                    "defaultValue": "[\n    { id: 'dashboard', label: 'Lorem', iconSvgPath: 'sidenav/1.svg' },\n    { id: 'alerts', label: 'Lorem', iconSvgPath: 'sidenav/2.svg' },\n    { id: 'reports', label: 'Lorem', iconSvgPath: 'sidenav/3.svg' },\n    { id: 'discover', label: 'Lorem', iconSvgPath: 'sidenav/4.svg' },\n    { id: 'deploy', label: 'Lorem', iconSvgPath: 'sidenav/5.svg' },\n    { id: 'docs', label: 'Lorem', iconSvgPath: 'sidenav/6.svg' },\n    { id: 'filters', label: 'Lorem', iconSvgPath: 'sidenav/7.svg' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavItem[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "handleItemClick",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSidenav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Define a type for a navigation item for clean, reusable code\nexport interface NavItem {\n  id: string; // Unique identifier for the item\n  label: string;\n  iconSvgPath: string; // The 'd' attribute of an SVG <path>\n}\n\n@Component({\n  selector: 'app-sidenav',\n  standalone: true,\n  imports: [CommonModule], // Required for *ngFor, ngClass, etc.\n  templateUrl: './sidenav.component.html',\n})\nexport class SidenavComponent {\n  @Input() activeItemId: string = 'dashboard';\n  @Input() userName: string = 'Lorem';\n  @Input() userRole: string = 'Lorem';\n\n  @Output() navItemClicked = new EventEmitter<string>();\n  @Output() logoutClicked = new EventEmitter<void>();\n  @Output() toggleClicked = new EventEmitter<void>();\n\n  @Input() isExpanded: boolean = true;\n\n  isHovering: boolean = false;\n\n  // --- Navigation Data ---\n  // You can easily add, remove, or reorder items here\n  topNavItems: NavItem[] = [\n    { id: 'dashboard', label: 'Lorem', iconSvgPath: 'sidenav/1.svg' },\n    { id: 'alerts', label: 'Lorem', iconSvgPath: 'sidenav/2.svg' },\n    { id: 'reports', label: 'Lorem', iconSvgPath: 'sidenav/3.svg' },\n    { id: 'discover', label: 'Lorem', iconSvgPath: 'sidenav/4.svg' },\n    { id: 'deploy', label: 'Lorem', iconSvgPath: 'sidenav/5.svg' },\n    { id: 'docs', label: 'Lorem', iconSvgPath: 'sidenav/6.svg' },\n    { id: 'filters', label: 'Lorem', iconSvgPath: 'sidenav/7.svg' },\n  ];\n\n  bottomNavItems: NavItem[] = [\n    { id: 'settings', label: 'Lorem', iconSvgPath: 'sidenav/9.svg' },\n    { id: 'help', label: 'Lorem', iconSvgPath: 'sidenav/8.svg' },\n  ];\n\n  toggleSidenav(): void {\n    this.isExpanded = !this.isExpanded;\n  }\n\n  handleItemClick(id: string): void {\n    this.activeItemId = id;\n    this.navItemClicked.emit(id);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div\n  *ngIf=\"isExpanded\"\n  (click)=\"toggleSidenav()\"\n  class=\"fixed inset-0 bg-black/50 z-40 lg:hidden\"\n></div>\n\n<aside\n  class=\"fixed top-0 left-0 h-screen bg-white shadow-lg flex flex-col transition-all duration-300 ease-in-out z-50 lg:relative lg:transition-all\"\n  [ngClass]=\"{\n    'w-64': isExpanded,\n    '-translate-x-full': !isExpanded,\n    'translate-x-0': isExpanded,\n    'lg:w-20': !isExpanded,\n    'lg:translate-x-0': true,\n  }\"\n  (mouseenter)=\"isHovering = true\"\n  (mouseleave)=\"isHovering = false\"\n>\n  <!-- Logo Section -->\n  <div *ngIf=\"!isExpanded\" class=\"flex items-center justify-center h-20 px-4 flex-shrink-0\">\n    <img src=\"logo.PNG\" alt=\"\" class=\"w-8 h-8\" />\n  </div>\n\n  <!-- Top Navigation -->\n  <nav class=\"flex-grow px-4 space-y-2 mt-[20px] sm:mt-[30px]\">\n    <a\n      *ngFor=\"let item of topNavItems\"\n      (click)=\"handleItemClick(item.id)\"\n      class=\"flex items-center p-2 rounded-lg cursor-pointer transition-colors duration-200\"\n      [ngClass]=\"\n        activeItemId === item.id ? 'bg-green-100 text-green-800' : 'text-gray-600 hover:bg-gray-100'\n      \"\n    >\n      <img [src]=\"item.iconSvgPath\" alt=\"\" class=\"w-5 h-5\" />\n      <span\n        class=\"ml-3 text-[#525D73] text-sm transition-opacity duration-200\"\n        [ngClass]=\"isExpanded ? 'opacity-100' : 'opacity-0'\"\n      >\n        {{ item.label }}\n      </span>\n    </a>\n  </nav>\n\n  <!-- Bottom Navigation -->\n  <div class=\"flex-shrink-0 px-4 space-y-2\">\n    <a\n      *ngFor=\"let item of bottomNavItems\"\n      (click)=\"handleItemClick(item.id)\"\n      class=\"flex items-center p-2 rounded-lg cursor-pointer transition-colors duration-200\"\n      [ngClass]=\"\n        activeItemId === item.id ? 'bg-green-50 text-[#525D73]' : 'text-[#525D73] hover:bg-gray-100'\n      \"\n    >\n      <img [src]=\"item.iconSvgPath\" alt=\"\" class=\"w-5 h-5\" />\n      <span\n        class=\"ml-3 text-[#525D73] text-sm transition-opacity duration-200\"\n        [ngClass]=\"isExpanded ? 'opacity-100' : 'opacity-0'\"\n      >\n        {{ item.label }}\n      </span>\n    </a>\n  </div>\n\n  <!-- User Profile Section -->\n  <div class=\"flex-shrink-0 p-4 border-t border-gray-200 mt-2\">\n    <div class=\"flex items-center\">\n      <img src=\"sidenav/avatar.svg\" alt=\"\" class=\"w-10 h-10\" />\n      <div *ngIf=\"isExpanded\" class=\"ml-3 flex-grow overflow-hidden\">\n        <p class=\"font-semibold text-[#525D73] truncate\">{{ userName }}</p>\n        <p class=\"text-sm text-[#525D73] truncate\">{{ userRole }}</p>\n      </div>\n      <div\n        *ngIf=\"isExpanded\"\n        (click)=\"logoutClicked.emit()\"\n        class=\"ml-2 cursor-pointer text-gray-500 hover:text-gray-800 flex-shrink-0\"\n      >\n        <svg\n          class=\"h-6 w-6\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke-width=\"1.5\"\n          stroke=\"currentColor\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            d=\"M15.75 9V5.25A2.25 2.25 0 0013.5 3h-6a2.25 2.25 0 00-2.25 2.25v13.5A2.25 2.25 0 007.5 21h6a2.25 2.25 0 002.25-2.25V15M12 9l-3 3m0 0l3 3m-3-3h12.75\"\n          />\n        </svg>\n      </div>\n    </div>\n  </div>\n\n  <!-- Collapse/Expand Button (Only visible on desktop) -->\n  <button\n    *ngIf=\"isExpanded || isHovering\"\n    (click)=\"toggleSidenav()\"\n    class=\"absolute -right-3 top-10 bg-green-600 hover:bg-green-700 text-white w-6 h-6 rounded-full hidden lg:flex items-center justify-center transition-opacity duration-200 z-50\"\n  >\n    <svg\n      class=\"h-4 w-4 transition-transform duration-300\"\n      [ngClass]=\"{ 'rotate-180': !isExpanded }\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke-width=\"2\"\n      stroke=\"currentColor\"\n    >\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.75 19.5L8.25 12l7.5-7.5\" />\n    </svg>\n  </button>\n</aside>\n"
        },
        {
            "name": "StatusComponent",
            "id": "component-StatusComponent-1c3fdf3025c33f27e399c0455934c43db19ceb3fff28babe560e79d285c6bca952e002d92d7e85463cb9a3a783d9be5dcbe1cace6077212ec05349e07c83a0ce",
            "file": "src/app/shared/components/status/status.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-status",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./status.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "status",
                    "defaultValue": "'success'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe type of status, which determines the color and icon.\n",
                    "description": "<p>The type of status, which determines the color and icon.</p>\n",
                    "line": 27,
                    "type": "StatusType",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional smaller text that appears below the title.\n",
                    "description": "<p>Optional smaller text that appears below the title.</p>\n",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'Lorem'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe primary text label for the status.\n",
                    "description": "<p>The primary text label for the status.</p>\n",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "statusClasses",
                    "defaultValue": "{\n    error: {\n      iconBg: 'bg-[#D9534F]',\n      text: 'text-[#D9534F]',\n    },\n    warning: {\n      iconBg: 'bg-[#F0AD4E]',\n      text: 'text-[#F0AD4E]',\n    },\n    success: {\n      iconBg: 'bg-[#5CB85C]',\n      text: 'text-[#5CB85C]',\n    },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>A map to easily resolve the correct Tailwind CSS classes for each status.\nThe hex codes are chosen to perfectly match the colors in the image.</p>\n",
                    "line": 33,
                    "rawdescription": "\n\nA map to easily resolve the correct Tailwind CSS classes for each status.\nThe hex codes are chosen to perfectly match the colors in the image.\n"
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Define a type for the status to ensure type safety and provide clear options\nexport type StatusType = 'error' | 'warning' | 'success';\n\n@Component({\n  selector: 'app-status',\n  standalone: true,\n  imports: [CommonModule], // Required for *ngIf and ngClass\n  templateUrl: './status.component.html',\n})\nexport class StatusComponent {\n  /**\n   * The primary text label for the status.\n   */\n  @Input() title: string = 'Lorem';\n\n  /**\n   * Optional smaller text that appears below the title.\n   */\n  @Input() subtitle?: string;\n\n  /**\n   * The type of status, which determines the color and icon.\n   */\n  @Input() status: StatusType = 'success';\n\n  /**\n   * A map to easily resolve the correct Tailwind CSS classes for each status.\n   * The hex codes are chosen to perfectly match the colors in the image.\n   */\n  statusClasses = {\n    error: {\n      iconBg: 'bg-[#D9534F]',\n      text: 'text-[#D9534F]',\n    },\n    warning: {\n      iconBg: 'bg-[#F0AD4E]',\n      text: 'text-[#F0AD4E]',\n    },\n    success: {\n      iconBg: 'bg-[#5CB85C]',\n      text: 'text-[#5CB85C]',\n    },\n  };\n\n  get currentStatusClasses() {\n    return this.statusClasses[this.status];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "currentStatusClasses": {
                    "name": "currentStatusClasses",
                    "getSignature": {
                        "name": "currentStatusClasses",
                        "type": "",
                        "returnType": "",
                        "line": 48
                    }
                }
            },
            "templateData": "<!-- Main container using flexbox for alignment -->\n<div class=\"flex items-center space-x-2\">\n  <!-- Circular Icon Container -->\n  <div\n    class=\"w-6 h-6 rounded-full flex items-center justify-center flex-shrink-0\"\n    [ngClass]=\"currentStatusClasses.iconBg\"\n  >\n    <!-- The icon changes based on the status type -->\n    <ng-container [ngSwitch]=\"status\">\n      <!-- Success Icon (Shield with Check) -->\n      <img *ngSwitchCase=\"'success'\" src=\"status/success.svg\" alt=\"frametwo\" class=\"h-5 w-5\" />\n      <img *ngSwitchCase=\"'error'\" src=\"status/error.svg\" alt=\"frametwo\" class=\"h-5 w-5\" />\n      <img *ngSwitchDefault src=\"status/warning.svg\" alt=\"frametwo\" class=\"h-5 w-5\" />\n    </ng-container>\n  </div>\n\n  <!-- Text Container for Title and optional Subtitle -->\n  <div>\n    <p class=\"text-sm font-medium\" [ngClass]=\"currentStatusClasses.text\">\n      {{ title }}\n    </p>\n    <p *ngIf=\"subtitle\" class=\"text-sm text-gray-500 mt-0.5\">\n      {{ subtitle }}\n    </p>\n  </div>\n</div>\n"
        },
        {
            "name": "VulnerabilitiesCardComponent",
            "id": "component-VulnerabilitiesCardComponent-e8764e3e67b425dfec1358e374842b501935af2c257878ded5568f5e7f7c745a0acbd3edbf8df8e8555e431154e7b675f01d2df85509d6890f1bcc295c7a86c0",
            "file": "src/app/features/dashboard/components/vulnerabilities-card/vulnerabilities-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-vulnerabilities-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./vulnerabilities-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "patchedVersion",
                    "defaultValue": "'1.2.3.4'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe version number that contains the fix.\n",
                    "description": "<p>The version number that contains the fix.</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "patchedVersionLabel",
                    "defaultValue": "'Lorem'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe label for the patched version information.\n",
                    "description": "<p>The label for the patched version information.</p>\n",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'Lorem Ipsum Dolor Sit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe main title for the vulnerability section.\n",
                    "description": "<p>The main title for the vulnerability section.</p>\n",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "vulnerableVersions",
                    "defaultValue": "[\n    '1.2.3.4',\n    '1.2.3.4',\n    '1.2.3.4',\n    '1.2.3.4',\n    '1.2.3.4',\n    '1.2.3.4',\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAn array of strings representing the vulnerable versions.\n",
                    "description": "<p>An array of strings representing the vulnerable versions.</p>\n",
                    "line": 20,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-vulnerabilities-card',\n  templateUrl: './vulnerabilities-card.component.html',\n  styleUrl: './vulnerabilities-card.component.scss',\n  imports: [CommonModule],\n  standalone: true,\n})\nexport class VulnerabilitiesCardComponent {\n  /**\n   * The main title for the vulnerability section.\n   */\n  @Input() title: string = 'Lorem Ipsum Dolor Sit';\n\n  /**\n   * An array of strings representing the vulnerable versions.\n   */\n  @Input() vulnerableVersions: string[] = [\n    '1.2.3.4',\n    '1.2.3.4',\n    '1.2.3.4',\n    '1.2.3.4',\n    '1.2.3.4',\n    '1.2.3.4',\n  ];\n\n  /**\n   * The label for the patched version information.\n   */\n  @Input() patchedVersionLabel: string = 'Lorem';\n\n  /**\n   * The version number that contains the fix.\n   */\n  @Input() patchedVersion: string = '1.2.3.4';\n}\n",
            "styleUrl": "./vulnerabilities-card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<!-- Main container with border and rounded corners -->\n<div class=\"bg-white rounded-[15px] p-5 max-w-lg shadow-[0_4px_12px_rgba(0,0,0,0.10)]\">\n  <!-- Top Section: Title and Vulnerable Versions -->\n  <div class=\"\">\n    <!-- Title Tag -->\n    <span class=\"bg-[#FFF1F2] text-[#C01634] text-sm font-medium px-3 py-1.5 rounded-lg\">\n      {{ title }}\n    </span>\n\n    <!-- Grid for Vulnerable Versions -->\n    <div class=\"grid grid-cols-3 gap-x-2 gap-y-2 mt-4 ml-0 sm:ml-8\">\n      <ng-container *ngFor=\"let version of vulnerableVersions\">\n        <span class=\"bg-red-50 text-[#C01634] text-sm font-medium px-1 py-1.5 rounded-lg text-left\">\n          {{ version }}\n        </span>\n      </ng-container>\n    </div>\n  </div>\n\n  <!-- Bottom Section: Patched Version -->\n  <div class=\"mt-6\">\n    <span class=\"bg-[#F2EDFF] text-[#6236CC] text-sm font-medium px-3 py-1.5 rounded-lg\">\n      {{ patchedVersionLabel }}: {{ patchedVersion }}\n    </span>\n  </div>\n</div>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)],\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "LineItemType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"text\" | \"yellow-tag\" | \"green-tag\" | \"purple-tag\" | \"blue-tag\"",
                "file": "src/app/features/dashboard/components/framethree-card/framethree-card.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "RiskLevel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"Critical\" | \"High\" | \"Medium\" | \"Low\"",
                "file": "src/app/features/dashboard/components/context-risk-card/context-risk-card.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "StatusType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"error\" | \"warning\" | \"success\"",
                "file": "src/app/shared/components/status/status.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)],\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/features/dashboard/components/framethree-card/framethree-card.component.ts": [
                {
                    "name": "LineItemType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"text\" | \"yellow-tag\" | \"green-tag\" | \"purple-tag\" | \"blue-tag\"",
                    "file": "src/app/features/dashboard/components/framethree-card/framethree-card.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "src/app/features/dashboard/components/context-risk-card/context-risk-card.component.ts": [
                {
                    "name": "RiskLevel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"Critical\" | \"High\" | \"Medium\" | \"Low\"",
                    "file": "src/app/features/dashboard/components/context-risk-card/context-risk-card.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "src/app/shared/components/status/status.component.ts": [
                {
                    "name": "StatusType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"error\" | \"warning\" | \"success\"",
                    "file": "src/app/shared/components/status/status.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 13,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/navigation.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NavigationService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/navigation.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavigationState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/zoom.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ZoomService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/zoom.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZoomConfig",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/components/context-analytic-card/context-analytic-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContextAnalyticCardComponent",
                "coveragePercent": 10,
                "coverageCount": "1/10",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/components/context-analytic-card/context-analytic-card.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RiskListItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/components/context-risk-card/context-risk-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContextRiskCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/components/context-risk-card/context-risk-card.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AssetItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/components/context-risk-card/context-risk-card.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "RiskLevel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/components/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/components/frameone-card/frameone-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FrameoneCardComponent",
                "coveragePercent": 10,
                "coverageCount": "1/10",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/components/framethree-card/framethree-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FramethreeCardComponent",
                "coveragePercent": 66,
                "coverageCount": "2/3",
                "status": "good"
            },
            {
                "filePath": "src/app/features/dashboard/components/framethree-card/framethree-card.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ContentBlock",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/components/framethree-card/framethree-card.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LineItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/components/framethree-card/framethree-card.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "LineItemType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/components/frametwo-card/frametwo-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FrametwoCardComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/app/features/dashboard/components/frametwo-card/frametwo-card.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataLineItem",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "src/app/features/dashboard/components/remediation-card/remediation-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RemediationCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/components/vulnerabilities-card/vulnerabilities-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VulnerabilitiesCardComponent",
                "coveragePercent": 80,
                "coverageCount": "4/5",
                "status": "very-good"
            },
            {
                "filePath": "src/app/features/dashboard/models/dashboard-data.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ContextAnalyticData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/models/dashboard-data.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ContextRiskData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/models/dashboard-data.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DashboardData",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/models/dashboard-data.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ImageHoverData",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/models/dashboard-data.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NoteData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/models/dashboard-data.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RemediationCardData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/services/dashboard-data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DashboardDataService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/components/sidenav/sidenav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidenavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/components/sidenav/sidenav.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/image-hover/image-hover.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImageHoverComponent",
                "coveragePercent": 36,
                "coverageCount": "4/11",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/components/list/list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListComponent",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/components/list/list.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ListItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/note/note.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NoteComponent",
                "coveragePercent": 66,
                "coverageCount": "2/3",
                "status": "good"
            },
            {
                "filePath": "src/app/shared/components/status/status.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatusComponent",
                "coveragePercent": 80,
                "coverageCount": "4/5",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/status/status.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "StatusType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/asset-item.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AssetItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/list-item.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ListItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            }
        ]
    }
}